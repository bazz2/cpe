/* cwmp-1-4.h
   Generated by wsdl2h 2.8.17r from cwmp-1-4.xsd and typemap.dat
   2014-06-03 15:45:20 GMT

   DO NOT INCLUDE THIS FILE DIRECTLY INTO YOUR PROJECT BUILDS
   USE THE soapcpp2-GENERATED SOURCE CODE FILES FOR YOUR PROJECT BUILDS

   gSOAP XML Web services tools.
   Copyright (C) 2000-2013 Robert van Engelen, Genivia Inc. All Rights Reserved.
   Part of this software is released under one of the following licenses:
   GPL or Genivia's license for commercial use.
*/

/** @page page_notes Usage Notes

NOTE:

 - Run soapcpp2 on cwmp-1-4.h to generate the SOAP/XML processing logic.
   Use soapcpp2 -I to specify paths for #import
   To build with STL, 'stlvector.h' is imported from 'import' dir in package.
   Use soapcpp2 -j to generate improved proxy and server classes.
 - Use wsdl2h -c and -s to generate pure C code or C++ code without STL.
 - Use 'typemap.dat' to control namespace bindings and type mappings.
   It is strongly recommended to customize the names of the namespace prefixes
   generated by wsdl2h. To do so, modify the prefix bindings in the Namespaces
   section below and add the modified lines to 'typemap.dat' to rerun wsdl2h.
 - Use Doxygen (www.doxygen.org) on this file to generate documentation.
 - Use wsdl2h -R to generate REST operations.
 - Use wsdl2h -nname to use name as the base namespace prefix instead of 'ns'.
 - Use wsdl2h -Nname for service prefix and produce multiple service bindings
 - Use wsdl2h -d to enable DOM support for xsd:anyType.
 - Use wsdl2h -g to auto-generate readers and writers for root elements.
 - Use wsdl2h -b to auto-generate bi-directional operations (duplex ops).
 - Struct/class members serialized as XML attributes are annotated with a '@'.
 - Struct/class members that have a special role are annotated with a '$'.

WARNING:

   DO NOT INCLUDE THIS ANNOTATED FILE DIRECTLY IN YOUR PROJECT SOURCE CODE.
   USE THE FILES GENERATED BY soapcpp2 FOR YOUR PROJECT'S SOURCE CODE:
   THE soapStub.h FILE CONTAINS THIS CONTENT WITHOUT ANNOTATIONS.

LICENSE:

@verbatim
--------------------------------------------------------------------------------
gSOAP XML Web services tools
Copyright (C) 2000-2013, Robert van Engelen, Genivia Inc. All Rights Reserved.

This software is released under one of the following licenses:
GPL or Genivia's license for commercial use.
--------------------------------------------------------------------------------
GPL license.

This program is free software; you can redistribute it and/or modify it under
the terms of the GNU General Public License as published by the Free Software
Foundation; either version 2 of the License, or (at your option) any later
version.

This program is distributed in the hope that it will be useful, but WITHOUT ANY
WARRANTY; without even the implied warranty of MERCHANTABILITY or FITNESS FOR A
PARTICULAR PURPOSE. See the GNU General Public License for more details.

You should have received a copy of the GNU General Public License along with
this program; if not, write to the Free Software Foundation, Inc., 59 Temple
Place, Suite 330, Boston, MA 02111-1307 USA

Author contact information:
engelen@genivia.com / engelen@acm.org

This program is released under the GPL with the additional exemption that
compiling, linking, and/or using OpenSSL is allowed.
--------------------------------------------------------------------------------
A commercial-use license is available from Genivia, Inc., contact@genivia.com
--------------------------------------------------------------------------------
@endverbatim

*/


//gsoapopt cw

/******************************************************************************\
 *                                                                            *
 * Definitions                                                                *
 *   urn:dslforum-org:cwmp-1-2                                                *
 *                                                                            *
\******************************************************************************/


/******************************************************************************\
 *                                                                            *
 * Import                                                                     *
 *                                                                            *
\******************************************************************************/


/******************************************************************************\
 *                                                                            *
 * Schema Namespaces                                                          *
 *                                                                            *
\******************************************************************************/


/* NOTE:

It is strongly recommended to customize the names of the namespace prefixes
generated by wsdl2h. To do so, modify the prefix bindings below and add the
modified lines to typemap.dat to rerun wsdl2h:

ns1 = "urn:dslforum-org:cwmp-1-2"

*/

#define SOAP_NAMESPACE_OF_ns1	"urn:dslforum-org:cwmp-1-2"
//gsoap ns1   schema namespace:	urn:dslforum-org:cwmp-1-2
//gsoap ns1   schema form:	unqualified

/******************************************************************************\
 *                                                                            *
 * Built-in Schema Types and Top-Level Elements and Attributes                *
 *                                                                            *
\******************************************************************************/


/// Built-in type "SOAP-ENC:base64".
struct SOAP_ENC__base64 { unsigned char *__ptr; int __size; };

/// Built-in type "xs:boolean".
enum xsd__boolean { xsd__boolean__false_, xsd__boolean__true_ };

/// Primitive built-in type "xs:anySimpleType"
typedef char* xsd__anySimpleType;

/// Primitive built-in type "xs:anyURI"
typedef char* xsd__anyURI;


/******************************************************************************\
 *                                                                            *
 * Schema Types and Top-Level Elements and Attributes                         *
 *   urn:dslforum-org:cwmp-1-2                                                *
 *                                                                            *
\******************************************************************************/


/// union of values from ""urn:dslforum-org:cwmp-1-2":DefaultDeploymentUnitOperationType"
/// union of values from "xs:string"
typedef char* ns1__DeploymentUnitOperationType;

/// "urn:dslforum-org:cwmp-1-2":CPEFaultCodeType is a simpleType restriction of xs:unsignedInt.
/// @brief CPE Fault Codes from 9000 to 9799 * 9000 - Method not supported * 9001 - Request denied (no reason specified) * 9002 - Internal error * 9003 - Invalid arguments * 9004 - Resources exceeded * 9005 - Invalid parameter name * 9006 - Invalid parameter type * 9007 - Invalid parameter value * 9008 - Attempt to set a non-writable parameter * 9009 - Notification request rejected * 9010 - File transfer failure * 9011 - Upload failure * 9012 - File transfer server authentication failure * 9013 - Unsupported protocol for file transfer * 9014 - File transfer failure: unable to join multicast group * 9015 - File transfer failure: unable to contact file server * 9016 - File transfer failure: unable to access file * 9017 - File transfer failure: unable to complete download * 9018 - File transfer failure: file corrupted * 9019 - File transfer failure: file authentication failure * 9020 - File transfer failure: unable to complete download within specified time windows * 9021 - Cancelation of file transfer not permitted in current transfer state * 9022 - Invalid UUID Format * 9023 - Unknown Execution Environment * 9024 - Disabled Execution Environment * 9025 - Deployment Unit to Execution Environment Mismatch * 9026 - Duplicate Deployment Unit * 9027 - System Resources Exceeded * 9028 - Unknown Deployment Unit * 9029 - Invalid Deployment Unit State * 9030 - Invalid Deployement Unit Update Downgrade not permitted * 9031 - Invalid Deployement Unit Update Version not specified * 9032 - Invalid Deployment Unit Update Version already exists
/// Value range is [9000..9799]
typedef unsigned int ns1__CPEFaultCodeType 9000:9799;

/// "urn:dslforum-org:cwmp-1-2":CPEExtensionFaultCodeType is a simpleType restriction of xs:unsignedInt.
/// @brief Range of CPE Fault Codes from 9033 to 9799 for future extension
/// Value range is [9033..9799]
typedef unsigned int ns1__CPEExtensionFaultCodeType 9033:9799;

/// "urn:dslforum-org:cwmp-1-2":CPEVendorFaultCodeType is a simpleType restriction of xs:unsignedInt.
/// @brief Vendor Extension range for CPE Fault Codes from 9800 to 9899
/// Value range is [9800..9899]
typedef unsigned int ns1__CPEVendorFaultCodeType 9800:9899;

/// "urn:dslforum-org:cwmp-1-2":ACSFaultCodeType is a simpleType restriction of xs:unsignedInt.
/// @brief ACS Fault Codes from 8000 to 8005 * 8000 - Method not supported * 8001 - Request denied (no reason specified) * 8002 - Internal error * 8003 - Invalid arguments * 8004 - Resources exceeded * 8005 - Retry request
/// Value range is [8000..8799]
typedef unsigned int ns1__ACSFaultCodeType 8000:8799;

/// "urn:dslforum-org:cwmp-1-2":ACSVendorFaultCodeType is a simpleType restriction of xs:unsignedInt.
/// @brief Vendor Extension range for ACS Fault Codes from 8800 to 8899
/// Value range is [8800..8899]
typedef unsigned int ns1__ACSVendorFaultCodeType 8800:8899;

/// "urn:dslforum-org:cwmp-1-2":TransferFileType is a simpleType restriction of xs:string.
/// @brief This type is used for AllQueuedTransferStruct and AutonomousTransferComplete
/// Length of this string is within 0..64 characters
/// Content pattern is "[1-9]\\d*( \\S+)+" (note: not automatically enforced)
/// Content pattern is "[1-9]\\d*( \\S+)+ [1-9]\\d*" (note: not automatically enforced)
/// Content pattern is "X [0-9A-F]{6} .+" (note: not automatically enforced)
/// Content pattern is "X \\S+ .+" (note: not automatically enforced)
typedef char* ns1__TransferFileType "[1-9]\\d*( \\S+)+|[1-9]\\d*( \\S+)+ [1-9]\\d*|X [0-9A-F]{6} .+|X \\S+ .+":64;

/// "urn:dslforum-org:cwmp-1-2":DownloadFileType is a simpleType restriction of xs:string.
/// @brief This type is used for Download and RequestDownload
/// Length of this string is within 0..64 characters
/// Content pattern is "[1-9]\\d*( \\S+)+" (note: not automatically enforced)
/// Content pattern is "X [0-9A-F]{6} .+" (note: not automatically enforced)
/// Content pattern is "X \\S+ .+" (note: not automatically enforced)
typedef char* ns1__DownloadFileType "[1-9]\\d*( \\S+)+|X [0-9A-F]{6} .+|X \\S+ .+":64;

/// "urn:dslforum-org:cwmp-1-2":UploadFileType is a simpleType restriction of xs:string.
/// @brief This type is used for Upload
/// Length of this string is within 0..64 characters
/// Content pattern is "[1-9]\\d*( \\S+)+" (note: not automatically enforced)
/// Content pattern is "[1-9]\\d*( \\S+)+ [1-9]\\d*" (note: not automatically enforced)
/// Content pattern is "X [0-9A-F]{6} .+" (note: not automatically enforced)
/// Content pattern is "X \\S+ .+" (note: not automatically enforced)
typedef char* ns1__UploadFileType "[1-9]\\d*( \\S+)+|[1-9]\\d*( \\S+)+ [1-9]\\d*|X [0-9A-F]{6} .+|X \\S+ .+":64;

/// "urn:dslforum-org:cwmp-1-2":EventCodeType is a simpleType restriction of xs:string.
/// Length of this string is within 0..64 characters
/// Content pattern is "\\d+( \\S+)+" (note: not automatically enforced)
/// Content pattern is "M \\S+" (note: not automatically enforced)
/// Content pattern is "M X_\\S+" (note: not automatically enforced)
/// Content pattern is "X [0-9A-F]{6} .+" (note: not automatically enforced)
/// Content pattern is "X \\S+ .+" (note: not automatically enforced)
typedef char* ns1__EventCodeType "\\d+( \\S+)+|M \\S+|M X_\\S+|X [0-9A-F]{6} .+|X \\S+ .+":64;

/// "urn:dslforum-org:cwmp-1-2":TimeWindowModeValueType is a simpleType restriction of xs:string.
/// Length of this string is within 0..64 characters
/// Content pattern is "[1-9]\\d*( \\S+)+" (note: not automatically enforced)
/// Content pattern is "X [0-9A-F]{6} .+" (note: not automatically enforced)
/// Content pattern is "X \\S+ .+" (note: not automatically enforced)
typedef char* ns1__TimeWindowModeValueType "[1-9]\\d*( \\S+)+|X [0-9A-F]{6} .+|X \\S+ .+":64;

/// "urn:dslforum-org:cwmp-1-2":CommandKeyType is a simpleType restriction of xs:string.
/// Length of this string is within 0..32 characters
typedef char* ns1__CommandKeyType:32;

/// "urn:dslforum-org:cwmp-1-2":ObjectNameType is a simpleType restriction of xs:string.
/// Length of this string is within 0..256 characters
/// Content pattern is ".*\\." (note: not automatically enforced)
typedef char* ns1__ObjectNameType ".*\\.":256;

/// "urn:dslforum-org:cwmp-1-2":ParameterKeyType is a simpleType restriction of xs:string.
/// Length of this string is within 0..32 characters
typedef char* ns1__ParameterKeyType:32;

/// "urn:dslforum-org:cwmp-1-2":AccessListValueType is a simpleType restriction of xs:string.
/// Note: enum values are prefixed with 'ns1__AccessListValueType' to avoid name clashes, please use wsdl2h option -e to omit this prefix
enum ns1__AccessListValueType
{
	ns1__AccessListValueType__Subscriber,	///< xs:string value="Subscriber"
};

/// "urn:dslforum-org:cwmp-1-2":ParameterAttributeNotificationValueType is a simpleType restriction of xs:int.
/// Note: enum values are prefixed with 'ns1__ParameterAttributeNotificationValueType' to avoid name clashes, please use wsdl2h option -e to omit this prefix
enum ns1__ParameterAttributeNotificationValueType
{
/// @brief Notification off. The CPE need not inform the ACS of a change to the specified parameter(s)
	ns1__ParameterAttributeNotificationValueType__0 = 0,	///< xs:int value="0"
/// @brief Passive notification. Whenever the specified parameter value changes, the CPE MUST include the new value in the ParameterList in the Inform message that is sent the next time a session is established to the ACS
	ns1__ParameterAttributeNotificationValueType__1 = 1,	///< xs:int value="1"
/// @brief Active notification. Whenever the specified parameter value changes, the CPE MUST initiate a session to the ACS, and include the new value in the ParameterList in the associated Inform message
	ns1__ParameterAttributeNotificationValueType__2 = 2,	///< xs:int value="2"
/// @brief Reserved for future use
	ns1__ParameterAttributeNotificationValueType__3 = 3,	///< xs:int value="3"
/// @brief Reserved for future use
	ns1__ParameterAttributeNotificationValueType__4 = 4,	///< xs:int value="4"
/// @brief Reserved for future use
	ns1__ParameterAttributeNotificationValueType__5 = 5,	///< xs:int value="5"
/// @brief Reserved for future use
	ns1__ParameterAttributeNotificationValueType__6 = 6,	///< xs:int value="6"
};

/// "urn:dslforum-org:cwmp-1-2":TransferStateType is a simpleType restriction of xs:int.
/// Note: enum values are prefixed with 'ns1__TransferStateType' to avoid name clashes, please use wsdl2h option -e to omit this prefix
enum ns1__TransferStateType
{
/// @brief Not yet started
	ns1__TransferStateType__1 = 1,	///< xs:int value="1"
/// @brief In progress
	ns1__TransferStateType__2 = 2,	///< xs:int value="2"
/// @brief Completed
	ns1__TransferStateType__3 = 3,	///< xs:int value="3"
};

/// "urn:dslforum-org:cwmp-1-2":DeploymentUnitUUID is a simpleType restriction of xs:string.
/// @brief A unique identifier for a Deployment Unit
/// Content pattern is "[A-Fa-f0-9]{8}-[A-Fa-f0-9]{4}-[A-Fa-f0-9]{4}-[A-Fa-f0-9]{4}-[A-Fa-f0-9]{12}" (note: not automatically enforced)
typedef char* ns1__DeploymentUnitUUID "[A-Fa-f0-9]{8}-[A-Fa-f0-9]{4}-[A-Fa-f0-9]{4}-[A-Fa-f0-9]{4}-[A-Fa-f0-9]{12}";

/// "urn:dslforum-org:cwmp-1-2":DeploymentUnitState is a simpleType restriction of xs:string.
/// @brief The state of a Deployment Unit on the device
/// Note: enum values are prefixed with 'ns1__DeploymentUnitState' to avoid name clashes, please use wsdl2h option -e to omit this prefix
enum ns1__DeploymentUnitState
{
/// @brief The Deployment Unit has been Installed.
	ns1__DeploymentUnitState__Installed,	///< xs:string value="Installed"
/// @brief The Deployment Unit has been Uninstalled.
	ns1__DeploymentUnitState__Uninstalled,	///< xs:string value="Uninstalled"
/// @brief The Deployment Unit Installed failed such that the Deployment Unit instance could not be created.
	ns1__DeploymentUnitState__Failed,	///< xs:string value="Failed"
};

/// "urn:dslforum-org:cwmp-1-2":DefaultDeploymentUnitOperationType is a simpleType restriction of xs:string.
/// Note: enum values are prefixed with 'ns1__DefaultDeploymentUnitOperationType' to avoid name clashes, please use wsdl2h option -e to omit this prefix
enum ns1__DefaultDeploymentUnitOperationType
{
/// @brief Install of a Deployment Unit
	ns1__DefaultDeploymentUnitOperationType__Install,	///< xs:string value="Install"
/// @brief Update of a Deployment Unit
	ns1__DefaultDeploymentUnitOperationType__Update,	///< xs:string value="Update"
/// @brief Uninstall of a Deployment Unit
	ns1__DefaultDeploymentUnitOperationType__Uninstall,	///< xs:string value="Uninstall"
};

/// "urn:dslforum-org:cwmp-1-2":TransferCompleteCPEFaultCodeType is a simpleType restriction of "urn:dslforum-org:cwmp-1-2":CPEFaultCodeType.
/// @brief Restricted subset of CPEFaultCodeType that are specific for the TransferComplete and AutonomousTransferComplete RPCs
/// Note: enum values are prefixed with 'ns1__TransferCompleteCPEFaultCodeType' to avoid name clashes, please use wsdl2h option -e to omit this prefix
enum ns1__TransferCompleteCPEFaultCodeType
{
	ns1__TransferCompleteCPEFaultCodeType__9001 = 9001,	///< "urn:dslforum-org:cwmp-1-2":CPEFaultCodeType value="9001"
	ns1__TransferCompleteCPEFaultCodeType__9002 = 9002,	///< "urn:dslforum-org:cwmp-1-2":CPEFaultCodeType value="9002"
	ns1__TransferCompleteCPEFaultCodeType__9010 = 9010,	///< "urn:dslforum-org:cwmp-1-2":CPEFaultCodeType value="9010"
	ns1__TransferCompleteCPEFaultCodeType__9011 = 9011,	///< "urn:dslforum-org:cwmp-1-2":CPEFaultCodeType value="9011"
	ns1__TransferCompleteCPEFaultCodeType__9012 = 9012,	///< "urn:dslforum-org:cwmp-1-2":CPEFaultCodeType value="9012"
	ns1__TransferCompleteCPEFaultCodeType__9014 = 9014,	///< "urn:dslforum-org:cwmp-1-2":CPEFaultCodeType value="9014"
	ns1__TransferCompleteCPEFaultCodeType__9015 = 9015,	///< "urn:dslforum-org:cwmp-1-2":CPEFaultCodeType value="9015"
	ns1__TransferCompleteCPEFaultCodeType__9016 = 9016,	///< "urn:dslforum-org:cwmp-1-2":CPEFaultCodeType value="9016"
	ns1__TransferCompleteCPEFaultCodeType__9017 = 9017,	///< "urn:dslforum-org:cwmp-1-2":CPEFaultCodeType value="9017"
	ns1__TransferCompleteCPEFaultCodeType__9018 = 9018,	///< "urn:dslforum-org:cwmp-1-2":CPEFaultCodeType value="9018"
	ns1__TransferCompleteCPEFaultCodeType__9019 = 9019,	///< "urn:dslforum-org:cwmp-1-2":CPEFaultCodeType value="9019"
	ns1__TransferCompleteCPEFaultCodeType__9020 = 9020,	///< "urn:dslforum-org:cwmp-1-2":CPEFaultCodeType value="9020"
};

/// "urn:dslforum-org:cwmp-1-2":DeploymentUnitCPEFaultCodeType is a simpleType restriction of "urn:dslforum-org:cwmp-1-2":CPEFaultCodeType.
/// @brief Restricted subset of CPEFaultCodeType that are specific for a single operation in the DUStateChangeComplete and AutonomousDUStateChangeComplete RPCs
/// Note: enum values are prefixed with 'ns1__DeploymentUnitCPEFaultCodeType' to avoid name clashes, please use wsdl2h option -e to omit this prefix
enum ns1__DeploymentUnitCPEFaultCodeType
{
	ns1__DeploymentUnitCPEFaultCodeType__9001 = 9001,	///< "urn:dslforum-org:cwmp-1-2":CPEFaultCodeType value="9001"
	ns1__DeploymentUnitCPEFaultCodeType__9003 = 9003,	///< "urn:dslforum-org:cwmp-1-2":CPEFaultCodeType value="9003"
	ns1__DeploymentUnitCPEFaultCodeType__9012 = 9012,	///< "urn:dslforum-org:cwmp-1-2":CPEFaultCodeType value="9012"
	ns1__DeploymentUnitCPEFaultCodeType__9013 = 9013,	///< "urn:dslforum-org:cwmp-1-2":CPEFaultCodeType value="9013"
	ns1__DeploymentUnitCPEFaultCodeType__9015 = 9015,	///< "urn:dslforum-org:cwmp-1-2":CPEFaultCodeType value="9015"
	ns1__DeploymentUnitCPEFaultCodeType__9016 = 9016,	///< "urn:dslforum-org:cwmp-1-2":CPEFaultCodeType value="9016"
	ns1__DeploymentUnitCPEFaultCodeType__9017 = 9017,	///< "urn:dslforum-org:cwmp-1-2":CPEFaultCodeType value="9017"
	ns1__DeploymentUnitCPEFaultCodeType__9018 = 9018,	///< "urn:dslforum-org:cwmp-1-2":CPEFaultCodeType value="9018"
	ns1__DeploymentUnitCPEFaultCodeType__9022 = 9022,	///< "urn:dslforum-org:cwmp-1-2":CPEFaultCodeType value="9022"
	ns1__DeploymentUnitCPEFaultCodeType__9023 = 9023,	///< "urn:dslforum-org:cwmp-1-2":CPEFaultCodeType value="9023"
	ns1__DeploymentUnitCPEFaultCodeType__9024 = 9024,	///< "urn:dslforum-org:cwmp-1-2":CPEFaultCodeType value="9024"
	ns1__DeploymentUnitCPEFaultCodeType__9025 = 9025,	///< "urn:dslforum-org:cwmp-1-2":CPEFaultCodeType value="9025"
	ns1__DeploymentUnitCPEFaultCodeType__9026 = 9026,	///< "urn:dslforum-org:cwmp-1-2":CPEFaultCodeType value="9026"
	ns1__DeploymentUnitCPEFaultCodeType__9027 = 9027,	///< "urn:dslforum-org:cwmp-1-2":CPEFaultCodeType value="9027"
	ns1__DeploymentUnitCPEFaultCodeType__9028 = 9028,	///< "urn:dslforum-org:cwmp-1-2":CPEFaultCodeType value="9028"
	ns1__DeploymentUnitCPEFaultCodeType__9029 = 9029,	///< "urn:dslforum-org:cwmp-1-2":CPEFaultCodeType value="9029"
	ns1__DeploymentUnitCPEFaultCodeType__9030 = 9030,	///< "urn:dslforum-org:cwmp-1-2":CPEFaultCodeType value="9030"
	ns1__DeploymentUnitCPEFaultCodeType__9031 = 9031,	///< "urn:dslforum-org:cwmp-1-2":CPEFaultCodeType value="9031"
	ns1__DeploymentUnitCPEFaultCodeType__9032 = 9032,	///< "urn:dslforum-org:cwmp-1-2":CPEFaultCodeType value="9032"
};

/******************************************************************************\
 *                                                                            *
 * Schema Complex Types and Top-Level Elements                                *
 *   urn:dslforum-org:cwmp-1-2                                                *
 *                                                                            *
\******************************************************************************/


/// "urn:dslforum-org:cwmp-1-2":TransferCompleteFaultStruct is a complexType.
/// @brief Fault information for TransferComplete and AutonomousTransferComplete
struct ns1__TransferCompleteFaultStruct
{
/// @brief Fault codes only related to TransferComplete RPCs

/// union of values from "xs:unsignedInt"
/// union of values from ""urn:dslforum-org:cwmp-1-2":TransferCompleteCPEFaultCodeType"
/// union of values from ""urn:dslforum-org:cwmp-1-2":CPEExtensionFaultCodeType"
/// union of values from ""urn:dslforum-org:cwmp-1-2":CPEVendorFaultCodeType"
    char*                                                              
                                         FaultCode                      1;	///< Required element.
/// Length of this string is within 0..256 characters
    char*                                                              
                                         FaultString                    1;	///< Required element.
};

/// "urn:dslforum-org:cwmp-1-2":DeploymentUnitFaultStruct is a complexType.
/// @brief Structure used to convey success or failure status of an operation performed on a Deployment Unit
struct ns1__DeploymentUnitFaultStruct
{
/// @brief Fault codes only related to DUStateChangeComplete RPCs

/// union of values from "xs:unsignedInt"
/// union of values from ""urn:dslforum-org:cwmp-1-2":DeploymentUnitCPEFaultCodeType"
/// union of values from ""urn:dslforum-org:cwmp-1-2":CPEExtensionFaultCodeType"
/// union of values from ""urn:dslforum-org:cwmp-1-2":CPEVendorFaultCodeType"
    char*                                                              
                                         FaultCode                      1;	///< Required element.
/// @brief An optional detail message providing further context for the fault
/// Element FaultString of type xs:string.
    char*                                FaultString                    0;	///< Optional element.
};

/// "urn:dslforum-org:cwmp-1-2":ParameterValueStruct is a complexType.
struct ns1__ParameterValueStruct
{
/// Length of this string is within 0..256 characters
    char*                                                              
                                         Name                           1;	///< Required element.
/// Element Value of type xs:anySimpleType.
    xsd__anySimpleType                   Value                          1;	///< Required element.
};

/// "urn:dslforum-org:cwmp-1-2":DeviceIdStruct is a complexType.
struct ns1__DeviceIdStruct
{
/// Length of this string is within 0..64 characters
    char*                                                              
                                         Manufacturer                   1;	///< Required element.
/// Length of this string is exactly 6 characters
/// Content pattern is "[0-9A-F]{6}" (note: not automatically enforced)
    char*                                                              
                                         OUI                            1;	///< Required element.
/// Length of this string is within 0..64 characters
    char*                                                              
                                         ProductClass                   1;	///< Required element.
/// Length of this string is within 0..64 characters
    char*                                                              
                                         SerialNumber                   1;	///< Required element.
};

/// "urn:dslforum-org:cwmp-1-2":EventStruct is a complexType.
struct ns1__EventStruct
{
/// Element EventCode of type "urn:dslforum-org:cwmp-1-2":EventCodeType.
    ns1__EventCodeType                   EventCode                      1;	///< Required element.
/// Element CommandKey of type "urn:dslforum-org:cwmp-1-2":CommandKeyType.
    ns1__CommandKeyType                  CommandKey                     1;	///< Required element.
};

/// "urn:dslforum-org:cwmp-1-2":ParameterInfoStruct is a complexType.
struct ns1__ParameterInfoStruct
{
/// Length of this string is within 0..256 characters
    char*                                                              
                                         Name                           1;	///< Required element.
/// Element Writable of type xs:boolean.
    enum xsd__boolean                    Writable                       1;	///< Required element.
};

/// "urn:dslforum-org:cwmp-1-2":SetParameterAttributesStruct is a complexType.
struct ns1__SetParameterAttributesStruct
{
/// Length of this string is within 0..256 characters
    char*                                                              
                                         Name                           1;	///< Required element.
/// Element NotificationChange of type xs:boolean.
    enum xsd__boolean                    NotificationChange             1;	///< Required element.
/// Element Notification of type "urn:dslforum-org:cwmp-1-2":ParameterAttributeNotificationValueType.
    enum ns1__ParameterAttributeNotificationValueType  Notification                   1;	///< Required element.
/// Element AccessListChange of type xs:boolean.
    enum xsd__boolean                    AccessListChange               1;	///< Required element.
/// Element AccessList of type "urn:dslforum-org:cwmp-1-2":AccessList.
    struct AccessList*                   AccessList                     1;	///< Required element.
};

/// "urn:dslforum-org:cwmp-1-2":ParameterAttributeStruct is a complexType.
struct ns1__ParameterAttributeStruct
{
/// Length of this string is within 0..256 characters
    char*                                                              
                                         Name                           1;	///< Required element.
/// Element Notification of type "urn:dslforum-org:cwmp-1-2":ParameterAttributeNotificationValueType.
    enum ns1__ParameterAttributeNotificationValueType  Notification                   1;	///< Required element.
/// Element AccessList of type "urn:dslforum-org:cwmp-1-2":AccessList.
    struct AccessList*                   AccessList                     1;	///< Required element.
};

/// "urn:dslforum-org:cwmp-1-2":TimeWindowStruct is a complexType.
struct ns1__TimeWindowStruct
{
/// Element WindowStart of type xs:unsignedInt.
    unsigned int                         WindowStart                    1;	///< Required element.
/// Element WindowEnd of type xs:unsignedInt.
    unsigned int                         WindowEnd                      1;	///< Required element.
/// Element WindowMode of type "urn:dslforum-org:cwmp-1-2":TimeWindowModeValueType.
    ns1__TimeWindowModeValueType         WindowMode                     1;	///< Required element.
/// Length of this string is within 0..256 characters
    char*                                                              
                                         UserMessage                    1;	///< Required element.
/// Element MaxRetries of type xs:int.
    int                                  MaxRetries                     1;	///< Required element.
};

/// "urn:dslforum-org:cwmp-1-2":QueuedTransferStruct is a complexType.
struct ns1__QueuedTransferStruct
{
/// Element CommandKey of type "urn:dslforum-org:cwmp-1-2":CommandKeyType.
    ns1__CommandKeyType                  CommandKey                     1;	///< Required element.
/// Element State of type "urn:dslforum-org:cwmp-1-2":TransferStateType.
    enum ns1__TransferStateType          State                          1;	///< Required element.
};

/// "urn:dslforum-org:cwmp-1-2":AllQueuedTransferStruct is a complexType.
struct ns1__AllQueuedTransferStruct
{
/// Element CommandKey of type "urn:dslforum-org:cwmp-1-2":CommandKeyType.
    ns1__CommandKeyType                  CommandKey                     1;	///< Required element.
/// Element State of type "urn:dslforum-org:cwmp-1-2":TransferStateType.
    enum ns1__TransferStateType          State                          1;	///< Required element.
/// Element IsDownload of type xs:boolean.
    enum xsd__boolean                    IsDownload                     1;	///< Required element.
/// Element FileType of type "urn:dslforum-org:cwmp-1-2":TransferFileType.
    ns1__TransferFileType                FileType                       1;	///< Required element.
/// Element FileSize of type xs:unsignedInt.
    unsigned int                         FileSize                       1;	///< Required element.
/// Length of this string is within 0..256 characters
    char*                                                              
                                         TargetFileName                 1;	///< Required element.
};

/// "urn:dslforum-org:cwmp-1-2":OperationStruct is an abstract complexType.
/// @brief A base type for Deployment Unit operations that can be performed on a device
struct ns1__OperationStruct
{
};

/// "urn:dslforum-org:cwmp-1-2":OpResultStruct is a complexType.
/// @brief The result of a Deployment Unit operation performed on the device
struct ns1__OpResultStruct
{
/// @brief The UUID of the affected Deployment Unit
/// Element UUID of type "urn:dslforum-org:cwmp-1-2":DeploymentUnitUUID.
    ns1__DeploymentUnitUUID              UUID                           1;	///< Required element.
/// @brief A reference to the affected Deployment Unit
/// Element DeploymentUnitRef of type xs:string.
    char*                                DeploymentUnitRef              1;	///< Required element.
/// @brief The Version of the affected Deployment Unit
/// Length of this string is within 0..32 characters
    char*                                                              
                                         Version                        1;	///< Required element.
/// @brief The current state of the affected Deployment Unit after performing the operation
/// Element CurrentState of type "urn:dslforum-org:cwmp-1-2":DeploymentUnitState.
    enum ns1__DeploymentUnitState        CurrentState                   1;	///< Required element.
/// @brief Whether or not the Deployment Unit resolved all of its dependencies after the Installation or Update
/// Element Resolved of type xs:boolean.
    enum xsd__boolean                    Resolved                       1;	///< Required element.
/// @brief A comma-separated list of execution unit references (e.g., ".SoftwareModules.ExecutionUnit.2, .SoftwareModules.ExecutionUnit.3"). In the case of an install, the execution units are those created by the operation. In the case of an uninstall, the execution units are those removed by the operation. In the case of an update, the execution units are those that remain after the operation has completed.
/// Element ExecutionUnitRefList of type xs:string.
    char*                                ExecutionUnitRefList           1;	///< Required element.
/// @brief The time on the device the operation on the affected Deployment Unit started. If the CPE cannot determine this, then the value should be the Unknown Time value.
/// Element StartTime of type xs:dateTime.
    time_t                               StartTime                      1;	///< Required element.
/// @brief The time on the device the operation on the affected Deployment Unit completed (successfully or otherwise). If the CPE cannot determine this, then the value should be the Unknown Time value.
/// Element CompleteTime of type xs:dateTime.
    time_t                               CompleteTime                   1;	///< Required element.
/// @brief Fault structure conveying the success or, in the case of failure, reason for the failure, of the operation
/// Element Fault of type "urn:dslforum-org:cwmp-1-2":DeploymentUnitFaultStruct.
    struct ns1__DeploymentUnitFaultStruct*  Fault                          1;	///< Required element.
};

/// "urn:dslforum-org:cwmp-1-2":OptionStruct is a complexType.
struct ns1__OptionStruct
{
/// Length of this string is within 0..64 characters
    char*                                                              
                                         OptionName                     1;	///< Required element.
/// Element VoucherSN of type xs:unsignedInt.
    unsigned int                         VoucherSN                      1;	///< Required element.
    enum _ns1__OptionStruct_State
    {
/// @brief Option is disabled and not setup
	_ns1__OptionStruct_State__0 = 0,	///< xs:unsignedInt value="0"
/// @brief Option is enabled and not setup
	_ns1__OptionStruct_State__1 = 1,	///< xs:unsignedInt value="1"
/// @brief Option is disabled and setup
	_ns1__OptionStruct_State__2 = 2,	///< xs:unsignedInt value="2"
/// @brief Option is enabled and setup
	_ns1__OptionStruct_State__3 = 3,	///< xs:unsignedInt value="3"
    }
                                         State                          1;	///< Required element.
    enum _ns1__OptionStruct_Mode
    {
/// @brief 0 - Disabled
	_ns1__OptionStruct_Mode__0 = 0,	///< xs:int value="0"
/// @brief 1 - Enabled with expiration
	_ns1__OptionStruct_Mode__1 = 1,	///< xs:int value="1"
/// @brief 2 - Enabled without expiration
	_ns1__OptionStruct_Mode__2 = 2,	///< xs:int value="2"
    }
                                         Mode                           1;	///< Required element.
/// Element StartDate of type xs:dateTime.
    time_t                               StartDate                      1;	///< Required element.
/// Element ExpirationDate of type xs:dateTime.
    time_t*                              ExpirationDate                 0;	///< Optional element.
    enum _ns1__OptionStruct_IsTransferable
    {
/// @brief Non-transferable
	_ns1__OptionStruct_IsTransferable__0 = 0,	///< xs:int value="0"
/// @brief Transferable
	_ns1__OptionStruct_IsTransferable__1 = 1,	///< xs:int value="1"
    }
                                         IsTransferable                 1;	///< Required element.
};

/// "urn:dslforum-org:cwmp-1-2":ArgStruct is a complexType.
struct ns1__ArgStruct
{
/// Length of this string is within 0..64 characters
    char*                                                              
                                         Name                           1;	///< Required element.
/// Length of this string is within 0..256 characters
    char*                                                              
                                         Value                          1;	///< Required element.
};


/// Top-level root element "urn:dslforum-org:cwmp-1-2":Fault

/// "urn:dslforum-org:cwmp-1-2":Fault is a complexType.
struct _ns1__Fault
{

/// union of values from ""urn:dslforum-org:cwmp-1-2":CPEFaultCodeType"
/// union of values from ""urn:dslforum-org:cwmp-1-2":CPEVendorFaultCodeType"
/// union of values from ""urn:dslforum-org:cwmp-1-2":ACSFaultCodeType"
/// union of values from ""urn:dslforum-org:cwmp-1-2":ACSVendorFaultCodeType"
    char*                                                              
                                         FaultCode                      1;	///< Required element.
/// Element FaultString of type xs:string.
    char*                                FaultString                    0;	///< Optional element.
/// Size of SetParameterValuesFault array is 0..unbounded
   $int                                  __sizeSetParameterValuesFault  0;
    struct _ns1__Fault_SetParameterValuesFault
    {
/// Element ParameterName of type xs:string.
    char*                                ParameterName                  1;	///< Required element.

/// union of values from ""urn:dslforum-org:cwmp-1-2":CPEFaultCodeType"
/// union of values from ""urn:dslforum-org:cwmp-1-2":CPEVendorFaultCodeType"
    char*                                                              
                                         FaultCode                      1;	///< Required element.
/// Element FaultString of type xs:string.
    char*                                FaultString                    0;	///< Optional element.
    }                                   *SetParameterValuesFault        0;
};


/// Top-level root element "urn:dslforum-org:cwmp-1-2":GetRPCMethods
/// @brief GeRPCMethods message - Annex A.3.1.1

/// "urn:dslforum-org:cwmp-1-2":GetRPCMethods is a complexType.
struct _ns1__GetRPCMethods
{
};


/// Top-level root element "urn:dslforum-org:cwmp-1-2":GetRPCMethodsResponse
/// @brief GeRPCMethodsResponse message - Annex A.3.1.1

/// "urn:dslforum-org:cwmp-1-2":GetRPCMethodsResponse is a complexType.
struct _ns1__GetRPCMethodsResponse
{
/// Element MethodList of type "urn:dslforum-org:cwmp-1-2":MethodList.
    struct MethodList*                   MethodList                     1;	///< Required element.
};


/// Top-level root element "urn:dslforum-org:cwmp-1-2":SetParameterValues
/// @brief SetParameterValues message - Annex A.3.2.1

/// "urn:dslforum-org:cwmp-1-2":SetParameterValues is a complexType.
struct _ns1__SetParameterValues
{
/// Element ParameterList of type "urn:dslforum-org:cwmp-1-2":ParameterValueList.
    struct ParameterValueList*           ParameterList                  1;	///< Required element.
/// Element ParameterKey of type "urn:dslforum-org:cwmp-1-2":ParameterKeyType.
    ns1__ParameterKeyType                ParameterKey                   1;	///< Required element.
};


/// Top-level root element "urn:dslforum-org:cwmp-1-2":SetParameterValuesResponse
/// @brief SetParameterValuesResponse message - Annex A.3.2.1

/// "urn:dslforum-org:cwmp-1-2":SetParameterValuesResponse is a complexType.
struct _ns1__SetParameterValuesResponse
{
    enum _ns1__SetParameterValuesResponse_Status
    {
/// @brief All Parameter changes have been validated and applied
	_ns1__SetParameterValuesResponse_Status__0 = 0,	///< xs:int value="0"
/// @brief All Parameter changes have been validated and committed, but some or all are not yet applied (for example, if a reboot is required before the new values are applied)
	_ns1__SetParameterValuesResponse_Status__1 = 1,	///< xs:int value="1"
    }
                                         Status                         1;	///< Required element.
};


/// Top-level root element "urn:dslforum-org:cwmp-1-2":GetParameterValues
/// @brief GetParameterValues message - Annex A.3.2.2

/// "urn:dslforum-org:cwmp-1-2":GetParameterValues is a complexType.
struct _ns1__GetParameterValues
{
/// Element ParameterNames of type "urn:dslforum-org:cwmp-1-2":ParameterNames.
    struct ParameterNames*               ParameterNames                 1;	///< Required element.
};


/// Top-level root element "urn:dslforum-org:cwmp-1-2":GetParameterValuesResponse
/// @brief GetParameterValuesResponse message - Annex A.3.2.2

/// "urn:dslforum-org:cwmp-1-2":GetParameterValuesResponse is a complexType.
struct _ns1__GetParameterValuesResponse
{
/// Element ParameterList of type "urn:dslforum-org:cwmp-1-2":ParameterValueList.
    struct ParameterValueList*           ParameterList                  1;	///< Required element.
};


/// Top-level root element "urn:dslforum-org:cwmp-1-2":GetParameterNames
/// @brief GetParameterNames message - Annex A.3.2.3

/// "urn:dslforum-org:cwmp-1-2":GetParameterNames is a complexType.
struct _ns1__GetParameterNames
{
/// Length of this string is within 0..256 characters
    char*                                                              
                                         ParameterPath                  1;	///< Required element.
/// Element NextLevel of type xs:boolean.
    enum xsd__boolean                    NextLevel                      1;	///< Required element.
};


/// Top-level root element "urn:dslforum-org:cwmp-1-2":GetParameterNamesResponse
/// @brief GetParameterNamesResponse message - Annex A.3.2.3

/// "urn:dslforum-org:cwmp-1-2":GetParameterNamesResponse is a complexType.
struct _ns1__GetParameterNamesResponse
{
/// Element ParameterList of type "urn:dslforum-org:cwmp-1-2":ParameterInfoList.
    struct ParameterInfoList*            ParameterList                  1;	///< Required element.
};


/// Top-level root element "urn:dslforum-org:cwmp-1-2":SetParameterAttributes
/// @brief SetParameterAttributes message - Annex A.3.2.4

/// "urn:dslforum-org:cwmp-1-2":SetParameterAttributes is a complexType.
struct _ns1__SetParameterAttributes
{
/// Element ParameterList of type "urn:dslforum-org:cwmp-1-2":SetParameterAttributesList.
    struct SetParameterAttributesList*   ParameterList                  1;	///< Required element.
};


/// Top-level root element "urn:dslforum-org:cwmp-1-2":SetParameterAttributesResponse
/// @brief SetParameterAttributesResponse message - Annex A.3.2.4

/// "urn:dslforum-org:cwmp-1-2":SetParameterAttributesResponse is a complexType.
struct _ns1__SetParameterAttributesResponse
{
};


/// Top-level root element "urn:dslforum-org:cwmp-1-2":GetParameterAttributes
/// @brief GetParameterAttributes message - Annex A.3.2.5

/// "urn:dslforum-org:cwmp-1-2":GetParameterAttributes is a complexType.
struct _ns1__GetParameterAttributes
{
/// Element ParameterNames of type "urn:dslforum-org:cwmp-1-2":ParameterNames.
    struct ParameterNames*               ParameterNames                 1;	///< Required element.
};


/// Top-level root element "urn:dslforum-org:cwmp-1-2":GetParameterAttributesResponse
/// @brief GetParameterAttributesResponse message - Annex A.3.2.5

/// "urn:dslforum-org:cwmp-1-2":GetParameterAttributesResponse is a complexType.
struct _ns1__GetParameterAttributesResponse
{
/// Element ParameterList of type "urn:dslforum-org:cwmp-1-2":ParameterAttributeList.
    struct ParameterAttributeList*       ParameterList                  1;	///< Required element.
};


/// Top-level root element "urn:dslforum-org:cwmp-1-2":AddObject
/// @brief AddObject message - Annex A.3.2.6

/// "urn:dslforum-org:cwmp-1-2":AddObject is a complexType.
struct _ns1__AddObject
{
/// Element ObjectName of type "urn:dslforum-org:cwmp-1-2":ObjectNameType.
    ns1__ObjectNameType                  ObjectName                     1;	///< Required element.
/// Element ParameterKey of type "urn:dslforum-org:cwmp-1-2":ParameterKeyType.
    ns1__ParameterKeyType                ParameterKey                   1;	///< Required element.
};


/// Top-level root element "urn:dslforum-org:cwmp-1-2":AddObjectResponse
/// @brief AddObjectResponse message - Annex A.3.2.6

/// "urn:dslforum-org:cwmp-1-2":AddObjectResponse is a complexType.
struct _ns1__AddObjectResponse
{
/// Value range is [1..]
    unsigned int                                                       
                                         InstanceNumber                 1;	///< Required element.
    enum _ns1__AddObjectResponse_Status
    {
/// @brief The object has been created
	_ns1__AddObjectResponse_Status__0 = 0,	///< xs:int value="0"
/// @brief The object creation has been validated and committed, but not yet applied
	_ns1__AddObjectResponse_Status__1 = 1,	///< xs:int value="1"
    }
                                         Status                         1;	///< Required element.
};


/// Top-level root element "urn:dslforum-org:cwmp-1-2":DeleteObject
/// @brief DeleteObject message - Annex A.3.2.7

/// "urn:dslforum-org:cwmp-1-2":DeleteObject is a complexType.
struct _ns1__DeleteObject
{
/// Element ObjectName of type "urn:dslforum-org:cwmp-1-2":ObjectNameType.
    ns1__ObjectNameType                  ObjectName                     1;	///< Required element.
/// Element ParameterKey of type "urn:dslforum-org:cwmp-1-2":ParameterKeyType.
    ns1__ParameterKeyType                ParameterKey                   1;	///< Required element.
};


/// Top-level root element "urn:dslforum-org:cwmp-1-2":DeleteObjectResponse
/// @brief DeleteObjectResponse message - Annex A.3.2.7

/// "urn:dslforum-org:cwmp-1-2":DeleteObjectResponse is a complexType.
struct _ns1__DeleteObjectResponse
{
    enum _ns1__DeleteObjectResponse_Status
    {
/// @brief The object has been deleted
	_ns1__DeleteObjectResponse_Status__0 = 0,	///< xs:int value="0"
/// @brief The object deletion has been validated and committed, but not yet applied
	_ns1__DeleteObjectResponse_Status__1 = 1,	///< xs:int value="1"
    }
                                         Status                         1;	///< Required element.
};


/// Top-level root element "urn:dslforum-org:cwmp-1-2":Download
/// @brief Download message - Annex A.3.2.8

/// "urn:dslforum-org:cwmp-1-2":Download is a complexType.
struct _ns1__Download
{
/// Element CommandKey of type "urn:dslforum-org:cwmp-1-2":CommandKeyType.
    ns1__CommandKeyType                  CommandKey                     1;	///< Required element.
/// Element FileType of type "urn:dslforum-org:cwmp-1-2":DownloadFileType.
    ns1__DownloadFileType                FileType                       1;	///< Required element.
/// Length of this string is within 0..256 characters
    char*                                                              
                                         URL                            1;	///< Required element.
/// Length of this string is within 0..256 characters
    char*                                                              
                                         Username                       1;	///< Required element.
/// Length of this string is within 0..256 characters
    char*                                                              
                                         Password                       1;	///< Required element.
/// Element FileSize of type xs:unsignedInt.
    unsigned int                         FileSize                       1;	///< Required element.
/// Length of this string is within 0..256 characters
    char*                                                              
                                         TargetFileName                 1;	///< Required element.
/// Element DelaySeconds of type xs:unsignedInt.
    unsigned int                         DelaySeconds                   1;	///< Required element.
/// Length of this string is within 0..256 characters
    char*                                                              
                                         SuccessURL                     1;	///< Required element.
/// Length of this string is within 0..256 characters
    char*                                                              
                                         FailureURL                     1;	///< Required element.
};


/// Top-level root element "urn:dslforum-org:cwmp-1-2":DownloadResponse
/// @brief DownloadResponse message - Annex A.3.2.8

/// "urn:dslforum-org:cwmp-1-2":DownloadResponse is a complexType.
struct _ns1__DownloadResponse
{
    enum _ns1__DownloadResponse_Status
    {
/// @brief Download has completed and been applied
	_ns1__DownloadResponse_Status__0 = 0,	///< xs:int value="0"
/// @brief Download has not yet been completed and applied
	_ns1__DownloadResponse_Status__1 = 1,	///< xs:int value="1"
    }
                                         Status                         1;	///< Required element.
/// Element StartTime of type xs:dateTime.
    time_t                               StartTime                      1;	///< Required element.
/// Element CompleteTime of type xs:dateTime.
    time_t                               CompleteTime                   1;	///< Required element.
};


/// Top-level root element "urn:dslforum-org:cwmp-1-2":Reboot
/// @brief Reboot message - Annex A.3.2.9

/// "urn:dslforum-org:cwmp-1-2":Reboot is a complexType.
struct _ns1__Reboot
{
/// Element CommandKey of type "urn:dslforum-org:cwmp-1-2":CommandKeyType.
    ns1__CommandKeyType                  CommandKey                     1;	///< Required element.
};


/// Top-level root element "urn:dslforum-org:cwmp-1-2":RebootResponse
/// @brief RebootResponse message - Annex A.3.2.9

/// "urn:dslforum-org:cwmp-1-2":RebootResponse is a complexType.
struct _ns1__RebootResponse
{
};


/// Top-level root element "urn:dslforum-org:cwmp-1-2":GetQueuedTransfers
/// @brief GetQueuedTransfers message - Annex A.4.1.1

/// "urn:dslforum-org:cwmp-1-2":GetQueuedTransfers is a complexType.
struct _ns1__GetQueuedTransfers
{
};


/// Top-level root element "urn:dslforum-org:cwmp-1-2":GetQueuedTransfersResponse
/// @brief GetQueuedTransfersResponse message - Annex A.4.1.1

/// "urn:dslforum-org:cwmp-1-2":GetQueuedTransfersResponse is a complexType.
struct _ns1__GetQueuedTransfersResponse
{
/// Element TransferList of type "urn:dslforum-org:cwmp-1-2":TransferList.
    struct TransferList*                 TransferList                   1;	///< Required element.
};


/// Top-level root element "urn:dslforum-org:cwmp-1-2":ScheduleInform
/// @brief ScheduleInform message - Annex A.4.1.2

/// "urn:dslforum-org:cwmp-1-2":ScheduleInform is a complexType.
struct _ns1__ScheduleInform
{
/// Element DelaySeconds of type xs:unsignedInt.
    unsigned int                         DelaySeconds                   1;	///< Required element.
/// Element CommandKey of type "urn:dslforum-org:cwmp-1-2":CommandKeyType.
    ns1__CommandKeyType                  CommandKey                     1;	///< Required element.
};


/// Top-level root element "urn:dslforum-org:cwmp-1-2":ScheduleInformResponse
/// @brief ScheduleInformResponse message - Annex A.4.1.2

/// "urn:dslforum-org:cwmp-1-2":ScheduleInformResponse is a complexType.
struct _ns1__ScheduleInformResponse
{
};


/// Top-level root element "urn:dslforum-org:cwmp-1-2":SetVouchers
/// @brief SetVouchers message - Annex A.4.1.3

/// "urn:dslforum-org:cwmp-1-2":SetVouchers is a complexType.
struct _ns1__SetVouchers
{
/// Element VoucherList of type "urn:dslforum-org:cwmp-1-2":VoucherList.
    struct VoucherList*                  VoucherList                    1;	///< Required element.
};


/// Top-level root element "urn:dslforum-org:cwmp-1-2":SetVouchersResponse
/// @brief SetVouchersResponse message - Annex A.4.1.3

/// "urn:dslforum-org:cwmp-1-2":SetVouchersResponse is a complexType.
struct _ns1__SetVouchersResponse
{
};


/// Top-level root element "urn:dslforum-org:cwmp-1-2":GetOptions
/// @brief GetOptions message - Annex A.4.1.4

/// "urn:dslforum-org:cwmp-1-2":GetOptions is a complexType.
struct _ns1__GetOptions
{
/// Length of this string is within 0..64 characters
    char*                                                              
                                         OptionName                     1;	///< Required element.
};


/// Top-level root element "urn:dslforum-org:cwmp-1-2":GetOptionsResponse
/// @brief GetOptionsResponse message - Annex A.4.1.4

/// "urn:dslforum-org:cwmp-1-2":GetOptionsResponse is a complexType.
struct _ns1__GetOptionsResponse
{
/// Element OptionList of type "urn:dslforum-org:cwmp-1-2":OptionList.
    struct OptionList*                   OptionList                     1;	///< Required element.
};


/// Top-level root element "urn:dslforum-org:cwmp-1-2":Upload
/// @brief Upload message - Annex A.4.1.5

/// "urn:dslforum-org:cwmp-1-2":Upload is a complexType.
struct _ns1__Upload
{
/// Element CommandKey of type "urn:dslforum-org:cwmp-1-2":CommandKeyType.
    ns1__CommandKeyType                  CommandKey                     1;	///< Required element.
/// Element FileType of type "urn:dslforum-org:cwmp-1-2":UploadFileType.
    ns1__UploadFileType                  FileType                       1;	///< Required element.
/// Length of this string is within 0..256 characters
    char*                                                              
                                         URL                            1;	///< Required element.
/// Length of this string is within 0..256 characters
    char*                                                              
                                         Username                       1;	///< Required element.
/// Length of this string is within 0..256 characters
    char*                                                              
                                         Password                       1;	///< Required element.
/// Element DelaySeconds of type xs:unsignedInt.
    unsigned int                         DelaySeconds                   1;	///< Required element.
};


/// Top-level root element "urn:dslforum-org:cwmp-1-2":UploadResponse
/// @brief UploadResponse message - Annex A.4.1.5

/// "urn:dslforum-org:cwmp-1-2":UploadResponse is a complexType.
struct _ns1__UploadResponse
{
    enum _ns1__UploadResponse_Status
    {
/// @brief Upload has been completed
	_ns1__UploadResponse_Status__0 = 0,	///< xs:int value="0"
/// @brief Upload has not yet completed
	_ns1__UploadResponse_Status__1 = 1,	///< xs:int value="1"
    }
                                         Status                         1;	///< Required element.
/// Element StartTime of type xs:dateTime.
    time_t                               StartTime                      1;	///< Required element.
/// Element CompleteTime of type xs:dateTime.
    time_t                               CompleteTime                   1;	///< Required element.
};


/// Top-level root element "urn:dslforum-org:cwmp-1-2":FactoryReset
/// @brief FactoryReset message - Annex A.4.1.6

/// "urn:dslforum-org:cwmp-1-2":FactoryReset is a complexType.
struct _ns1__FactoryReset
{
};


/// Top-level root element "urn:dslforum-org:cwmp-1-2":FactoryResetResponse
/// @brief FactoryResetResponse message - Annex A.4.1.6

/// "urn:dslforum-org:cwmp-1-2":FactoryResetResponse is a complexType.
struct _ns1__FactoryResetResponse
{
};


/// Top-level root element "urn:dslforum-org:cwmp-1-2":GetAllQueuedTransfers
/// @brief GetAllQueuedTransfers message - Annex A.4.1.7

/// "urn:dslforum-org:cwmp-1-2":GetAllQueuedTransfers is a complexType.
struct _ns1__GetAllQueuedTransfers
{
};


/// Top-level root element "urn:dslforum-org:cwmp-1-2":GetAllQueuedTransfersResponse
/// @brief GetAllQueuedTransfersResponse message - Annex A.4.1.7

/// "urn:dslforum-org:cwmp-1-2":GetAllQueuedTransfersResponse is a complexType.
struct _ns1__GetAllQueuedTransfersResponse
{
/// Element TransferList of type "urn:dslforum-org:cwmp-1-2":AllTransferList.
    struct AllTransferList*              TransferList                   1;	///< Required element.
};


/// Top-level root element "urn:dslforum-org:cwmp-1-2":ScheduleDownload
/// @brief ScheduleDownload message - Annex A.4.1.8

/// "urn:dslforum-org:cwmp-1-2":ScheduleDownload is a complexType.
struct _ns1__ScheduleDownload
{
/// Element CommandKey of type "urn:dslforum-org:cwmp-1-2":CommandKeyType.
    ns1__CommandKeyType                  CommandKey                     1;	///< Required element.
/// Element FileType of type "urn:dslforum-org:cwmp-1-2":DownloadFileType.
    ns1__DownloadFileType                FileType                       1;	///< Required element.
/// Length of this string is within 0..256 characters
    char*                                                              
                                         URL                            1;	///< Required element.
/// Length of this string is within 0..256 characters
    char*                                                              
                                         Username                       1;	///< Required element.
/// Length of this string is within 0..256 characters
    char*                                                              
                                         Password                       1;	///< Required element.
/// Element FileSize of type xs:unsignedInt.
    unsigned int                         FileSize                       1;	///< Required element.
/// Length of this string is within 0..256 characters
    char*                                                              
                                         TargetFileName                 1;	///< Required element.
/// Element TimeWindowList of type "urn:dslforum-org:cwmp-1-2":TimeWindowList.
    struct TimeWindowList*               TimeWindowList                 1;	///< Required element.
};


/// Top-level root element "urn:dslforum-org:cwmp-1-2":ScheduleDownloadResponse
/// @brief ScheduleDownloadResponse message - Annex A.4.1.8

/// "urn:dslforum-org:cwmp-1-2":ScheduleDownloadResponse is a complexType.
struct _ns1__ScheduleDownloadResponse
{
};


/// Top-level root element "urn:dslforum-org:cwmp-1-2":CancelTransfer
/// @brief CancelTransfer message - Annex A.4.1.9

/// "urn:dslforum-org:cwmp-1-2":CancelTransfer is a complexType.
struct _ns1__CancelTransfer
{
/// Element CommandKey of type "urn:dslforum-org:cwmp-1-2":CommandKeyType.
    ns1__CommandKeyType                  CommandKey                     1;	///< Required element.
};


/// Top-level root element "urn:dslforum-org:cwmp-1-2":CancelTransferResponse
/// @brief CancelTransferResponse message - Annex A.4.1.9

/// "urn:dslforum-org:cwmp-1-2":CancelTransferResponse is a complexType.
struct _ns1__CancelTransferResponse
{
};


/// Top-level root element "urn:dslforum-org:cwmp-1-2":ChangeDUState
/// @brief A request to perform an action on a Deployment Unit on the device

/// "urn:dslforum-org:cwmp-1-2":ChangeDUState is a complexType.
struct _ns1__ChangeDUState
{
/// @brief The operations to be performed. The content of an operation is contained within the operation sub-type.
/// Size of array of struct ns1__OperationStruct* is 1..unbounded
   $int                                  __sizeOperations               1;
/// Array struct ns1__OperationStruct* of length 1..unbounded
    struct ns1__OperationStruct*         Operations                     1;
/// @brief An optional command key used to correlate future results of the operation or changes made to the device as a result of the operation.
/// Element CommandKey of type "urn:dslforum-org:cwmp-1-2":CommandKeyType.
    ns1__CommandKeyType                  CommandKey                     0;	///< Optional element.
};


/// Top-level root element "urn:dslforum-org:cwmp-1-2":ChangeDUStateResponse
/// @brief Response to a ChangeDUState message

/// "urn:dslforum-org:cwmp-1-2":ChangeDUStateResponse is a complexType.
struct _ns1__ChangeDUStateResponse
{
};


/// Top-level root element "urn:dslforum-org:cwmp-1-2":Inform
/// @brief Inform message - Annex A.3.3.1

/// "urn:dslforum-org:cwmp-1-2":Inform is a complexType.
struct _ns1__Inform
{
/// Element DeviceId of type "urn:dslforum-org:cwmp-1-2":DeviceIdStruct.
    struct ns1__DeviceIdStruct*          DeviceId                       1;	///< Required element.
/// Element Event of type "urn:dslforum-org:cwmp-1-2":EventList.
    struct EventList*                    Event                          1;	///< Required element.
/// Element MaxEnvelopes of type xs:unsignedInt.
    unsigned int                         MaxEnvelopes                   1;	///< Required element.
/// Element CurrentTime of type xs:dateTime.
    time_t                               CurrentTime                    1;	///< Required element.
/// Element RetryCount of type xs:unsignedInt.
    unsigned int                         RetryCount                     1;	///< Required element.
/// Element ParameterList of type "urn:dslforum-org:cwmp-1-2":ParameterValueList.
    struct ParameterValueList*           ParameterList                  1;	///< Required element.
};


/// Top-level root element "urn:dslforum-org:cwmp-1-2":InformResponse
/// @brief InformResponse message - Annex A.3.3.1

/// "urn:dslforum-org:cwmp-1-2":InformResponse is a complexType.
struct _ns1__InformResponse
{
/// Element MaxEnvelopes of type xs:unsignedInt.
    unsigned int                         MaxEnvelopes                   1;	///< Required element.
};


/// Top-level root element "urn:dslforum-org:cwmp-1-2":TransferComplete
/// @brief TransferComplete message - Annex A.3.3.2

/// "urn:dslforum-org:cwmp-1-2":TransferComplete is a complexType.
struct _ns1__TransferComplete
{
/// Element CommandKey of type "urn:dslforum-org:cwmp-1-2":CommandKeyType.
    ns1__CommandKeyType                  CommandKey                     1;	///< Required element.
/// Element FaultStruct of type "urn:dslforum-org:cwmp-1-2":TransferCompleteFaultStruct.
    struct ns1__TransferCompleteFaultStruct*  FaultStruct                    1;	///< Required element.
/// Element StartTime of type xs:dateTime.
    time_t                               StartTime                      1;	///< Required element.
/// Element CompleteTime of type xs:dateTime.
    time_t                               CompleteTime                   1;	///< Required element.
};


/// Top-level root element "urn:dslforum-org:cwmp-1-2":TransferCompleteResponse
/// @brief TransferCompleteResponse message - Annex A.3.3.2

/// "urn:dslforum-org:cwmp-1-2":TransferCompleteResponse is a complexType.
struct _ns1__TransferCompleteResponse
{
};


/// Top-level root element "urn:dslforum-org:cwmp-1-2":AutonomousTransferComplete
/// @brief AutonomousTransferComplete message - Annex A.3.3.3

/// "urn:dslforum-org:cwmp-1-2":AutonomousTransferComplete is a complexType.
struct _ns1__AutonomousTransferComplete
{
/// Length of this string is within 0..1024 characters
    char*                                                              
                                         AnnounceURL                    1;	///< Required element.
/// Length of this string is within 0..1024 characters
    char*                                                              
                                         TransferURL                    1;	///< Required element.
/// Element IsDownload of type xs:boolean.
    enum xsd__boolean                    IsDownload                     1;	///< Required element.
/// Element FileType of type "urn:dslforum-org:cwmp-1-2":TransferFileType.
    ns1__TransferFileType                FileType                       1;	///< Required element.
/// Element FileSize of type xs:unsignedInt.
    unsigned int                         FileSize                       1;	///< Required element.
/// Length of this string is within 0..256 characters
    char*                                                              
                                         TargetFileName                 1;	///< Required element.
/// Element FaultStruct of type "urn:dslforum-org:cwmp-1-2":TransferCompleteFaultStruct.
    struct ns1__TransferCompleteFaultStruct*  FaultStruct                    1;	///< Required element.
/// Element StartTime of type xs:dateTime.
    time_t                               StartTime                      1;	///< Required element.
/// Element CompleteTime of type xs:dateTime.
    time_t                               CompleteTime                   1;	///< Required element.
};


/// Top-level root element "urn:dslforum-org:cwmp-1-2":AutonomousTransferCompleteResponse
/// @brief AutonomousTransferCompleteResponse message - Annex A.3.3.3

/// "urn:dslforum-org:cwmp-1-2":AutonomousTransferCompleteResponse is a complexType.
struct _ns1__AutonomousTransferCompleteResponse
{
};


/// Top-level root element "urn:dslforum-org:cwmp-1-2":Kicked
/// @brief Kicked message - Annex A.4.2.1

/// "urn:dslforum-org:cwmp-1-2":Kicked is a complexType.
struct _ns1__Kicked
{
/// Length of this string is within 0..32 characters
    char*                                                              
                                         Command                        1;	///< Required element.
/// Length of this string is within 0..64 characters
    char*                                                              
                                         Referer                        1;	///< Required element.
/// Length of this string is within 0..256 characters
    char*                                                              
                                         Arg                            1;	///< Required element.
/// Length of this string is within 0..1024 characters
    char*                                                              
                                         Next                           1;	///< Required element.
};


/// Top-level root element "urn:dslforum-org:cwmp-1-2":KickedResponse
/// @brief KickedResponse message - Annex A.4.2.1

/// "urn:dslforum-org:cwmp-1-2":KickedResponse is a complexType.
struct _ns1__KickedResponse
{
/// Length of this string is within 0..1024 characters
    char*                                                              
                                         NextURL                        1;	///< Required element.
};


/// Top-level root element "urn:dslforum-org:cwmp-1-2":RequestDownload
/// @brief RequestDownload message - Annex A.4.2.2

/// "urn:dslforum-org:cwmp-1-2":RequestDownload is a complexType.
struct _ns1__RequestDownload
{
/// Element FileType of type "urn:dslforum-org:cwmp-1-2":DownloadFileType.
    ns1__DownloadFileType                FileType                       1;	///< Required element.
/// Element FileTypeArg of type "urn:dslforum-org:cwmp-1-2":FileTypeArg.
    struct FileTypeArg*                  FileTypeArg                    1;	///< Required element.
};


/// Top-level root element "urn:dslforum-org:cwmp-1-2":RequestDownloadResponse
/// @brief RequestDownloadResponse message - Annex A.4.2.2

/// "urn:dslforum-org:cwmp-1-2":RequestDownloadResponse is a complexType.
struct _ns1__RequestDownloadResponse
{
};


/// Top-level root element "urn:dslforum-org:cwmp-1-2":DUStateChangeComplete
/// @brief A message indicating a prior ChangeDUState request to perform an action on a Deployment Unit on the device has completed

/// "urn:dslforum-org:cwmp-1-2":DUStateChangeComplete is a complexType.
struct _ns1__DUStateChangeComplete
{
/// @brief The results of the operation performed. The ordering of the operation results matches the order of the operations in the corresponding ChangeDUState message.
/// Size of array of struct ns1__OpResultStruct* is 1..unbounded
   $int                                  __sizeResults                  1;
/// Array struct ns1__OpResultStruct* of length 1..unbounded
    struct ns1__OpResultStruct*          Results                        1;
/// @brief The command key specified in the corresponding ChangeDUState message, if any
/// Element CommandKey of type "urn:dslforum-org:cwmp-1-2":CommandKeyType.
    ns1__CommandKeyType                  CommandKey                     0;	///< Optional element.
};


/// Top-level root element "urn:dslforum-org:cwmp-1-2":DUStateChangeCompleteResponse
/// @brief Response to a DUStateChangeComplete message

/// "urn:dslforum-org:cwmp-1-2":DUStateChangeCompleteResponse is a complexType.
struct _ns1__DUStateChangeCompleteResponse
{
};


/// Top-level root element "urn:dslforum-org:cwmp-1-2":AutonomousDUStateChangeComplete
/// @brief A message indicating an autonomous action for a Deployment Unit on the device has completed

/// "urn:dslforum-org:cwmp-1-2":AutonomousDUStateChangeComplete is a complexType.
struct _ns1__AutonomousDUStateChangeComplete
{
/// @brief The results of the operation performed
/// Size of array of struct ns1__AutonOpResultStruct* is 1..unbounded
   $int                                  __sizeResults                  1;
/// Array struct ns1__AutonOpResultStruct* of length 1..unbounded
    struct ns1__AutonOpResultStruct*     Results                        1;
};


/// Top-level root element "urn:dslforum-org:cwmp-1-2":AutonomousDUStateChangeCompleteResponse
/// @brief Response to a AutonomousDUStateChangeComplete message

/// "urn:dslforum-org:cwmp-1-2":AutonomousDUStateChangeCompleteResponse is a complexType.
struct _ns1__AutonomousDUStateChangeCompleteResponse
{
};

/// "urn:dslforum-org:cwmp-1-2":ParameterNames is a complexType with complexContent restriction of SOAP-ENC:Array.
/// SOAP encoded array of xs:string
struct ParameterNames
{
/// Pointer to array of char*.
    char*                               *__ptrstring                   ;
/// Size of the dynamic array.
    int                                  __size                        ;
/// Offset for partially transmitted arrays (uncomment only when required).
//  int                                  __offset                      ;
};

/// "urn:dslforum-org:cwmp-1-2":ParameterValueList is a complexType with complexContent restriction of SOAP-ENC:Array.
/// SOAP encoded array of "urn:dslforum-org:cwmp-1-2":ParameterValueStruct
struct ParameterValueList
{
/// Pointer to array of struct ns1__ParameterValueStruct*.
    struct ns1__ParameterValueStruct*   *__ptrParameterValueStruct     ;
/// Size of the dynamic array.
    int                                  __size                        ;
/// Offset for partially transmitted arrays (uncomment only when required).
//  int                                  __offset                      ;
};

/// "urn:dslforum-org:cwmp-1-2":MethodList is a complexType with complexContent restriction of SOAP-ENC:Array.
/// SOAP encoded array of xs:string
struct MethodList
{
/// Pointer to array of char*.
    char*                               *__ptrstring                   ;
/// Size of the dynamic array.
    int                                  __size                        ;
/// Offset for partially transmitted arrays (uncomment only when required).
//  int                                  __offset                      ;
};

/// "urn:dslforum-org:cwmp-1-2":EventList is a complexType with complexContent restriction of SOAP-ENC:Array.
/// SOAP encoded array of "urn:dslforum-org:cwmp-1-2":EventStruct
struct EventList
{
/// Pointer to array of struct ns1__EventStruct*.
    struct ns1__EventStruct*            *__ptrEventStruct              ;
/// Size of the dynamic array.
    int                                  __size                        ;
/// Offset for partially transmitted arrays (uncomment only when required).
//  int                                  __offset                      ;
};

/// "urn:dslforum-org:cwmp-1-2":ParameterInfoList is a complexType with complexContent restriction of SOAP-ENC:Array.
/// SOAP encoded array of "urn:dslforum-org:cwmp-1-2":ParameterInfoStruct
struct ParameterInfoList
{
/// Pointer to array of struct ns1__ParameterInfoStruct*.
    struct ns1__ParameterInfoStruct*    *__ptrParameterInfoStruct      ;
/// Size of the dynamic array.
    int                                  __size                        ;
/// Offset for partially transmitted arrays (uncomment only when required).
//  int                                  __offset                      ;
};

/// "urn:dslforum-org:cwmp-1-2":AccessList is a complexType with complexContent restriction of SOAP-ENC:Array.
/// SOAP encoded array of "urn:dslforum-org:cwmp-1-2":AccessListValueType
struct AccessList
{
/// Pointer to array of enum ns1__AccessListValueType.
    enum ns1__AccessListValueType       *__ptrstring                   ;
/// Size of the dynamic array.
    int                                  __size                        ;
/// Offset for partially transmitted arrays (uncomment only when required).
//  int                                  __offset                      ;
};

/// "urn:dslforum-org:cwmp-1-2":SetParameterAttributesList is a complexType with complexContent restriction of SOAP-ENC:Array.
/// SOAP encoded array of "urn:dslforum-org:cwmp-1-2":SetParameterAttributesStruct
struct SetParameterAttributesList
{
/// Pointer to array of struct ns1__SetParameterAttributesStruct*.
    struct ns1__SetParameterAttributesStruct* *__ptrSetParameterAttributesStruct;
/// Size of the dynamic array.
    int                                  __size                        ;
/// Offset for partially transmitted arrays (uncomment only when required).
//  int                                  __offset                      ;
};

/// "urn:dslforum-org:cwmp-1-2":ParameterAttributeList is a complexType with complexContent restriction of SOAP-ENC:Array.
/// SOAP encoded array of "urn:dslforum-org:cwmp-1-2":ParameterAttributeStruct
struct ParameterAttributeList
{
/// Pointer to array of struct ns1__ParameterAttributeStruct*.
    struct ns1__ParameterAttributeStruct* *__ptrParameterAttributeStruct ;
/// Size of the dynamic array.
    int                                  __size                        ;
/// Offset for partially transmitted arrays (uncomment only when required).
//  int                                  __offset                      ;
};

/// "urn:dslforum-org:cwmp-1-2":TimeWindowList is a complexType with complexContent restriction of SOAP-ENC:Array.
/// SOAP encoded array of "urn:dslforum-org:cwmp-1-2":TimeWindowStruct
struct TimeWindowList
{
/// Pointer to array of struct ns1__TimeWindowStruct*.
    struct ns1__TimeWindowStruct*       *__ptrTimeWindowStruct         ;
/// Size of the dynamic array.
    int                                  __size                        ;
/// Offset for partially transmitted arrays (uncomment only when required).
//  int                                  __offset                      ;
};

/// "urn:dslforum-org:cwmp-1-2":TransferList is a complexType with complexContent restriction of SOAP-ENC:Array.
/// SOAP encoded array of "urn:dslforum-org:cwmp-1-2":QueuedTransferStruct
struct TransferList
{
/// Pointer to array of struct ns1__QueuedTransferStruct*.
    struct ns1__QueuedTransferStruct*   *__ptrQueuedTransferStruct     ;
/// Size of the dynamic array.
    int                                  __size                        ;
/// Offset for partially transmitted arrays (uncomment only when required).
//  int                                  __offset                      ;
};

/// "urn:dslforum-org:cwmp-1-2":AllTransferList is a complexType with complexContent restriction of SOAP-ENC:Array.
/// SOAP encoded array of "urn:dslforum-org:cwmp-1-2":AllQueuedTransferStruct
struct AllTransferList
{
/// Pointer to array of struct ns1__AllQueuedTransferStruct*.
    struct ns1__AllQueuedTransferStruct* *__ptrAllQueuedTransferStruct  ;
/// Size of the dynamic array.
    int                                  __size                        ;
/// Offset for partially transmitted arrays (uncomment only when required).
//  int                                  __offset                      ;
};

/// "urn:dslforum-org:cwmp-1-2":InstallOpStruct is a complexType with complexContent extension of "urn:dslforum-org:cwmp-1-2":OperationStruct.
/// @brief An operation indicating a Deployment Unit should be installed
struct ns1__InstallOpStruct
{
/// INHERITED FROM ns1__OperationStruct:
//  END OF INHERITED FROM ns1__OperationStruct
/// @brief The URL of the Deployment Unit to download
/// Length of this string is within 0..1024 characters
    xsd__anyURI                                                        
                                         URL                            1;	///< Required element.
/// @brief The UUID to be used for the Deployment Unit being installed.
/// Element UUID of type "urn:dslforum-org:cwmp-1-2":DeploymentUnitUUID.
    ns1__DeploymentUnitUUID              UUID                           0;	///< Optional element.
/// @brief An optional username with which to authenticate against the url
/// Length of this string is within 0..256 characters
    char*                                                              
                                        *Username                       0;	///< Optional element.
/// @brief An optional password with which to authenticate against the url
/// Length of this string is within 0..256 characters
    char*                                                              
                                        *Password                       0;	///< Optional element.
/// @brief A reference to the Execution Environment upon which the Deployment Unit is to be associated (e.g., ".SoftwareModules.ExecEnv.1.")
/// Length of this string is within 0..256 characters
    char*                                                              
                                        *ExecutionEnvRef                0;	///< Optional element.
};

/// "urn:dslforum-org:cwmp-1-2":UpdateOpStruct is a complexType with complexContent extension of "urn:dslforum-org:cwmp-1-2":OperationStruct.
/// @brief An operation indicating an individual or all Deployment Units should be updated
struct ns1__UpdateOpStruct
{
/// INHERITED FROM ns1__OperationStruct:
//  END OF INHERITED FROM ns1__OperationStruct
/// @brief The UUID of the Deployment Unit to update. If the UUID is not present and the URL is present then the URL will be used to determine the Deployment Unit to update. If both the UUID and the URL are not specified, the operation indicates all installed Deployment Units should be updated.
/// Element UUID of type "urn:dslforum-org:cwmp-1-2":DeploymentUnitUUID.
    ns1__DeploymentUnitUUID              UUID                           0;	///< Optional element.
/// @brief An optional Version used to clarify which Deployment Unit to update. Only required in the case where multiple versions of the same Deployment Unit are installed on the device, in which case if not specified the update request will be rejected.
/// Length of this string is within 0..32 characters
    char*                                                              
                                        *Version                        0;	///< Optional element.
/// @brief The URL to be used when updating a Deployment Unit. If a UUID is provided and the URL is present then it serves as an updated URL for the existing installed Deployment Unit. If the UUID is not present and the URL is, it is used to determine the Deployment Unit to update. If neither the URL or UUID is specified then all Deployment Units are to be updated.
/// Length of this string is within 0..1024 characters
    xsd__anyURI                                                        
                                        *URL                            0;	///< Optional element.
/// @brief An optional username with which to authenticate against the url
/// Length of this string is within 0..256 characters
    char*                                                              
                                        *Username                       0;	///< Optional element.
/// @brief An optional password with which to authenticate against the url
/// Length of this string is within 0..256 characters
    char*                                                              
                                        *Password                       0;	///< Optional element.
};

/// "urn:dslforum-org:cwmp-1-2":UninstallOpStruct is a complexType with complexContent extension of "urn:dslforum-org:cwmp-1-2":OperationStruct.
/// @brief An operation indicating a Deployment Unit should be un-installed
struct ns1__UninstallOpStruct
{
/// INHERITED FROM ns1__OperationStruct:
//  END OF INHERITED FROM ns1__OperationStruct
/// @brief The UUID of the Deployment Unit to un-install
/// Element UUID of type "urn:dslforum-org:cwmp-1-2":DeploymentUnitUUID.
    ns1__DeploymentUnitUUID              UUID                           1;	///< Required element.
/// @brief An optional Version used to clarify which Deployment Unit to uninstall. If not specified and there are multiple versions of the same Deployment Unit installed on the device, then all of them will be uninstalled.
/// Length of this string is within 0..32 characters
    char*                                                              
                                        *Version                        0;	///< Optional element.
/// @brief A reference to the Execution Environment upon which the Deployment Unit is to be removed from (e.g., ".SoftwareModules.ExecEnv.1.")
/// Length of this string is within 0..256 characters
    char*                                                              
                                        *ExecutionEnvRef                0;	///< Optional element.
};

/// "urn:dslforum-org:cwmp-1-2":AutonOpResultStruct is a complexType with complexContent extension of "urn:dslforum-org:cwmp-1-2":OpResultStruct.
/// @brief The result of a Deployment Unit operation performed autonomously on the device (i.e., not at the direct request of the ACS)
struct ns1__AutonOpResultStruct
{
/// INHERITED FROM ns1__OpResultStruct:
/// @brief The UUID of the affected Deployment Unit
/// Element UUID of type "urn:dslforum-org:cwmp-1-2":DeploymentUnitUUID.
    ns1__DeploymentUnitUUID              UUID                           1;	///< Required element.
/// @brief A reference to the affected Deployment Unit
/// Element DeploymentUnitRef of type xs:string.
    char*                                DeploymentUnitRef              1;	///< Required element.
/// @brief The Version of the affected Deployment Unit
/// Length of this string is within 0..32 characters
    char*                                                              
                                         Version                        1;	///< Required element.
/// @brief The current state of the affected Deployment Unit after performing the operation
/// Element CurrentState of type "urn:dslforum-org:cwmp-1-2":DeploymentUnitState.
    enum ns1__DeploymentUnitState        CurrentState                   1;	///< Required element.
/// @brief Whether or not the Deployment Unit resolved all of its dependencies after the Installation or Update
/// Element Resolved of type xs:boolean.
    enum xsd__boolean                    Resolved                       1;	///< Required element.
/// @brief A comma-separated list of execution unit references (e.g., ".SoftwareModules.ExecutionUnit.2, .SoftwareModules.ExecutionUnit.3"). In the case of an install, the execution units are those created by the operation. In the case of an uninstall, the execution units are those removed by the operation. In the case of an update, the execution units are those that remain after the operation has completed.
/// Element ExecutionUnitRefList of type xs:string.
    char*                                ExecutionUnitRefList           1;	///< Required element.
/// @brief The time on the device the operation on the affected Deployment Unit started. If the CPE cannot determine this, then the value should be the Unknown Time value.
/// Element StartTime of type xs:dateTime.
    time_t                               StartTime                      1;	///< Required element.
/// @brief The time on the device the operation on the affected Deployment Unit completed (successfully or otherwise). If the CPE cannot determine this, then the value should be the Unknown Time value.
/// Element CompleteTime of type xs:dateTime.
    time_t                               CompleteTime                   1;	///< Required element.
/// @brief Fault structure conveying the success or, in the case of failure, reason for the failure, of the operation
/// Element Fault of type "urn:dslforum-org:cwmp-1-2":DeploymentUnitFaultStruct.
    struct ns1__DeploymentUnitFaultStruct*  Fault                          1;	///< Required element.
//  END OF INHERITED FROM ns1__OpResultStruct
/// @brief The operation that was performed against the deployment unit
/// Element OperationPerformed of type "urn:dslforum-org:cwmp-1-2":DeploymentUnitOperationType.
    ns1__DeploymentUnitOperationType     OperationPerformed             1;	///< Required element.
};

/// "urn:dslforum-org:cwmp-1-2":VoucherList is a complexType with complexContent restriction of SOAP-ENC:Array.
/// SOAP encoded array of SOAP-ENC:base64
struct VoucherList
{
/// Pointer to array of struct SOAP_ENC__base64*.
    struct SOAP_ENC__base64*            *__ptrbase64                   ;
/// Size of the dynamic array.
    int                                  __size                        ;
/// Offset for partially transmitted arrays (uncomment only when required).
//  int                                  __offset                      ;
};

/// "urn:dslforum-org:cwmp-1-2":OptionList is a complexType with complexContent restriction of SOAP-ENC:Array.
/// SOAP encoded array of "urn:dslforum-org:cwmp-1-2":OptionStruct
struct OptionList
{
/// Pointer to array of struct ns1__OptionStruct*.
    struct ns1__OptionStruct*           *__ptrOptionStruct             ;
/// Size of the dynamic array.
    int                                  __size                        ;
/// Offset for partially transmitted arrays (uncomment only when required).
//  int                                  __offset                      ;
};

/// "urn:dslforum-org:cwmp-1-2":FileTypeArg is a complexType with complexContent restriction of SOAP-ENC:Array.
/// SOAP encoded array of "urn:dslforum-org:cwmp-1-2":ArgStruct
struct FileTypeArg
{
/// Pointer to array of struct ns1__ArgStruct*.
    struct ns1__ArgStruct*              *__ptrArgStruct                ;
/// Size of the dynamic array.
    int                                  __size                        ;
/// Offset for partially transmitted arrays (uncomment only when required).
//  int                                  __offset                      ;
};


/// Top-level root element "urn:dslforum-org:cwmp-1-2":SupportedCWMPVersions

/// "urn:dslforum-org:cwmp-1-2":SupportedCWMPVersions is a complexType with simpleContent.
struct _ns1__SupportedCWMPVersions
{
/// __item wraps 'xs:string' simpleContent.
    char*                                __item                        ;
/// @brief NOTE: implementations MUST use a value of 0 for the mustUnderstand attribute. This is typically done in the XSD via a 'fixed="0"' attribute, but there are some problems with SOAP 1.1 that cause schema validation issues.
/// Imported attribute reference SOAP-ENV:mustUnderstand.
   @char*                                SOAP_ENV__mustUnderstand       0;	///< Optional attribute.
};


/// Top-level root element "urn:dslforum-org:cwmp-1-2":UseCWMPVersion

/// "urn:dslforum-org:cwmp-1-2":UseCWMPVersion is a complexType with simpleContent.
struct _ns1__UseCWMPVersion
{
/// __item wraps 'xs:string' simpleContent.
    char*                                __item                        ;
/// @brief NOTE: implementations MUST use a value of 1 for the mustUnderstand attribute. This is typically done in the XSD via a 'fixed="1"' attribute, but there are some problems with SOAP 1.1 that cause schema validation issues.
/// Imported attribute reference SOAP-ENV:mustUnderstand.
   @char*                                SOAP_ENV__mustUnderstand       1;	///< Required attribute.
};


/// Top-level root element "urn:dslforum-org:cwmp-1-2":SessionTimeout

/// "urn:dslforum-org:cwmp-1-2":SessionTimeout is a complexType with simpleContent.
struct _ns1__SessionTimeout
{
/// __item wraps 'xs:unsignedInt' simpleContent.
    unsigned int                         __item                        ;
/// Imported attribute reference SOAP-ENV:mustUnderstand.
   @char*                                SOAP_ENV__mustUnderstand       0;	///< Fixed optional value="0".
};


/// Top-level root element "urn:dslforum-org:cwmp-1-2":ID

/// "urn:dslforum-org:cwmp-1-2":ID is a complexType with simpleContent.
struct _ns1__ID
{
/// __item wraps 'xs:string' simpleContent.
    char*                                __item                        ;
/// Imported attribute reference SOAP-ENV:mustUnderstand.
   @char*                                SOAP_ENV__mustUnderstand       1;	///< Fixed required value="1".
};


/// Top-level root element "urn:dslforum-org:cwmp-1-2":HoldRequests

/// "urn:dslforum-org:cwmp-1-2":HoldRequests is a complexType with simpleContent.
struct _ns1__HoldRequests
{
/// __item wraps 'xs:boolean' simpleContent.
    enum xsd__boolean                    __item                        ;
/// Imported attribute reference SOAP-ENV:mustUnderstand.
   @char*                                SOAP_ENV__mustUnderstand       1;	///< Fixed required value="1".
};

/******************************************************************************\
 *                                                                            *
 * Additional Top-Level Elements                                              *
 *   urn:dslforum-org:cwmp-1-2                                                *
 *                                                                            *
\******************************************************************************/


/******************************************************************************\
 *                                                                            *
 * Additional Top-Level Attributes                                            *
 *   urn:dslforum-org:cwmp-1-2                                                *
 *                                                                            *
\******************************************************************************/


/******************************************************************************\
 *                                                                            *
 * XML Data Binding                                                           *
 *                                                                            *
\******************************************************************************/


/**

@page page_XMLDataBinding XML Data Binding

SOAP/XML services use data bindings contractually bound by WSDL and auto-
generated by wsdl2h and soapcpp2 (see Service Bindings). Plain data bindings
are adopted from XML schemas as part of the WSDL types section or when running
wsdl2h on a set of schemas to produce non-SOAP-based XML data bindings.

The following readers and writers are C/C++ data type (de)serializers auto-
generated by wsdl2h and soapcpp2. Run soapcpp2 on this file to generate the
(de)serialization code, which is stored in soapC.c[pp]. Include "soapH.h" in
your code to import these data type and function declarations. Only use the
soapcpp2-generated files in your project build. Do not include the wsdl2h-
generated .h file in your code.

Data can be read in XML and deserialized from:
  - a file descriptor, using soap->recvfd = fd
  - a socket, using soap->socket = ...
  - a C++ stream, using soap->is = ...
  - a buffer, using the soap->frecv() callback

Data can be serialized in XML and written to:
  - a file descriptor, using soap->sendfd = fd
  - a socket, using soap->socket = ...
  - a C++ stream, using soap->os = ...
  - a buffer, using the soap->fsend() callback

The following options are available for (de)serialization control:
  - soap->encodingStyle = NULL; to remove SOAP 1.1/1.2 encodingStyle
  - soap_mode(soap, SOAP_XML_TREE); XML without id-ref (no cycles!)
  - soap_mode(soap, SOAP_XML_GRAPH); XML with id-ref (including cycles)
  - soap_set_namespaces(soap, struct Namespace *nsmap); to set xmlns bindings


@section ns1 Top-level root elements of schema "urn:dslforum-org:cwmp-1-2"

  - <ns1:SupportedCWMPVersions> @ref _ns1__SupportedCWMPVersions
    @code
    // Reader (returns SOAP_OK on success):
    soap_read__ns1__SupportedCWMPVersions(struct soap*, struct _ns1__SupportedCWMPVersions*);
    // Writer (returns SOAP_OK on success):
    soap_write__ns1__SupportedCWMPVersions(struct soap*, struct _ns1__SupportedCWMPVersions*);
    @endcode

  - <ns1:UseCWMPVersion> @ref _ns1__UseCWMPVersion
    @code
    // Reader (returns SOAP_OK on success):
    soap_read__ns1__UseCWMPVersion(struct soap*, struct _ns1__UseCWMPVersion*);
    // Writer (returns SOAP_OK on success):
    soap_write__ns1__UseCWMPVersion(struct soap*, struct _ns1__UseCWMPVersion*);
    @endcode

  - <ns1:SessionTimeout> @ref _ns1__SessionTimeout
    @code
    // Reader (returns SOAP_OK on success):
    soap_read__ns1__SessionTimeout(struct soap*, struct _ns1__SessionTimeout*);
    // Writer (returns SOAP_OK on success):
    soap_write__ns1__SessionTimeout(struct soap*, struct _ns1__SessionTimeout*);
    @endcode

  - <ns1:ID> @ref _ns1__ID
    @code
    // Reader (returns SOAP_OK on success):
    soap_read__ns1__ID(struct soap*, struct _ns1__ID*);
    // Writer (returns SOAP_OK on success):
    soap_write__ns1__ID(struct soap*, struct _ns1__ID*);
    @endcode

  - <ns1:HoldRequests> @ref _ns1__HoldRequests
    @code
    // Reader (returns SOAP_OK on success):
    soap_read__ns1__HoldRequests(struct soap*, struct _ns1__HoldRequests*);
    // Writer (returns SOAP_OK on success):
    soap_write__ns1__HoldRequests(struct soap*, struct _ns1__HoldRequests*);
    @endcode

  - <ns1:Fault> @ref _ns1__Fault
    @code
    // Reader (returns SOAP_OK on success):
    soap_read__ns1__Fault(struct soap*, struct _ns1__Fault*);
    // Writer (returns SOAP_OK on success):
    soap_write__ns1__Fault(struct soap*, struct _ns1__Fault*);
    @endcode

  - <ns1:GetRPCMethods> @ref _ns1__GetRPCMethods
    @code
    // Reader (returns SOAP_OK on success):
    soap_read__ns1__GetRPCMethods(struct soap*, struct _ns1__GetRPCMethods*);
    // Writer (returns SOAP_OK on success):
    soap_write__ns1__GetRPCMethods(struct soap*, struct _ns1__GetRPCMethods*);
    @endcode

  - <ns1:GetRPCMethodsResponse> @ref _ns1__GetRPCMethodsResponse
    @code
    // Reader (returns SOAP_OK on success):
    soap_read__ns1__GetRPCMethodsResponse(struct soap*, struct _ns1__GetRPCMethodsResponse*);
    // Writer (returns SOAP_OK on success):
    soap_write__ns1__GetRPCMethodsResponse(struct soap*, struct _ns1__GetRPCMethodsResponse*);
    @endcode

  - <ns1:SetParameterValues> @ref _ns1__SetParameterValues
    @code
    // Reader (returns SOAP_OK on success):
    soap_read__ns1__SetParameterValues(struct soap*, struct _ns1__SetParameterValues*);
    // Writer (returns SOAP_OK on success):
    soap_write__ns1__SetParameterValues(struct soap*, struct _ns1__SetParameterValues*);
    @endcode

  - <ns1:SetParameterValuesResponse> @ref _ns1__SetParameterValuesResponse
    @code
    // Reader (returns SOAP_OK on success):
    soap_read__ns1__SetParameterValuesResponse(struct soap*, struct _ns1__SetParameterValuesResponse*);
    // Writer (returns SOAP_OK on success):
    soap_write__ns1__SetParameterValuesResponse(struct soap*, struct _ns1__SetParameterValuesResponse*);
    @endcode

  - <ns1:GetParameterValues> @ref _ns1__GetParameterValues
    @code
    // Reader (returns SOAP_OK on success):
    soap_read__ns1__GetParameterValues(struct soap*, struct _ns1__GetParameterValues*);
    // Writer (returns SOAP_OK on success):
    soap_write__ns1__GetParameterValues(struct soap*, struct _ns1__GetParameterValues*);
    @endcode

  - <ns1:GetParameterValuesResponse> @ref _ns1__GetParameterValuesResponse
    @code
    // Reader (returns SOAP_OK on success):
    soap_read__ns1__GetParameterValuesResponse(struct soap*, struct _ns1__GetParameterValuesResponse*);
    // Writer (returns SOAP_OK on success):
    soap_write__ns1__GetParameterValuesResponse(struct soap*, struct _ns1__GetParameterValuesResponse*);
    @endcode

  - <ns1:GetParameterNames> @ref _ns1__GetParameterNames
    @code
    // Reader (returns SOAP_OK on success):
    soap_read__ns1__GetParameterNames(struct soap*, struct _ns1__GetParameterNames*);
    // Writer (returns SOAP_OK on success):
    soap_write__ns1__GetParameterNames(struct soap*, struct _ns1__GetParameterNames*);
    @endcode

  - <ns1:GetParameterNamesResponse> @ref _ns1__GetParameterNamesResponse
    @code
    // Reader (returns SOAP_OK on success):
    soap_read__ns1__GetParameterNamesResponse(struct soap*, struct _ns1__GetParameterNamesResponse*);
    // Writer (returns SOAP_OK on success):
    soap_write__ns1__GetParameterNamesResponse(struct soap*, struct _ns1__GetParameterNamesResponse*);
    @endcode

  - <ns1:SetParameterAttributes> @ref _ns1__SetParameterAttributes
    @code
    // Reader (returns SOAP_OK on success):
    soap_read__ns1__SetParameterAttributes(struct soap*, struct _ns1__SetParameterAttributes*);
    // Writer (returns SOAP_OK on success):
    soap_write__ns1__SetParameterAttributes(struct soap*, struct _ns1__SetParameterAttributes*);
    @endcode

  - <ns1:SetParameterAttributesResponse> @ref _ns1__SetParameterAttributesResponse
    @code
    // Reader (returns SOAP_OK on success):
    soap_read__ns1__SetParameterAttributesResponse(struct soap*, struct _ns1__SetParameterAttributesResponse*);
    // Writer (returns SOAP_OK on success):
    soap_write__ns1__SetParameterAttributesResponse(struct soap*, struct _ns1__SetParameterAttributesResponse*);
    @endcode

  - <ns1:GetParameterAttributes> @ref _ns1__GetParameterAttributes
    @code
    // Reader (returns SOAP_OK on success):
    soap_read__ns1__GetParameterAttributes(struct soap*, struct _ns1__GetParameterAttributes*);
    // Writer (returns SOAP_OK on success):
    soap_write__ns1__GetParameterAttributes(struct soap*, struct _ns1__GetParameterAttributes*);
    @endcode

  - <ns1:GetParameterAttributesResponse> @ref _ns1__GetParameterAttributesResponse
    @code
    // Reader (returns SOAP_OK on success):
    soap_read__ns1__GetParameterAttributesResponse(struct soap*, struct _ns1__GetParameterAttributesResponse*);
    // Writer (returns SOAP_OK on success):
    soap_write__ns1__GetParameterAttributesResponse(struct soap*, struct _ns1__GetParameterAttributesResponse*);
    @endcode

  - <ns1:AddObject> @ref _ns1__AddObject
    @code
    // Reader (returns SOAP_OK on success):
    soap_read__ns1__AddObject(struct soap*, struct _ns1__AddObject*);
    // Writer (returns SOAP_OK on success):
    soap_write__ns1__AddObject(struct soap*, struct _ns1__AddObject*);
    @endcode

  - <ns1:AddObjectResponse> @ref _ns1__AddObjectResponse
    @code
    // Reader (returns SOAP_OK on success):
    soap_read__ns1__AddObjectResponse(struct soap*, struct _ns1__AddObjectResponse*);
    // Writer (returns SOAP_OK on success):
    soap_write__ns1__AddObjectResponse(struct soap*, struct _ns1__AddObjectResponse*);
    @endcode

  - <ns1:DeleteObject> @ref _ns1__DeleteObject
    @code
    // Reader (returns SOAP_OK on success):
    soap_read__ns1__DeleteObject(struct soap*, struct _ns1__DeleteObject*);
    // Writer (returns SOAP_OK on success):
    soap_write__ns1__DeleteObject(struct soap*, struct _ns1__DeleteObject*);
    @endcode

  - <ns1:DeleteObjectResponse> @ref _ns1__DeleteObjectResponse
    @code
    // Reader (returns SOAP_OK on success):
    soap_read__ns1__DeleteObjectResponse(struct soap*, struct _ns1__DeleteObjectResponse*);
    // Writer (returns SOAP_OK on success):
    soap_write__ns1__DeleteObjectResponse(struct soap*, struct _ns1__DeleteObjectResponse*);
    @endcode

  - <ns1:Download> @ref _ns1__Download
    @code
    // Reader (returns SOAP_OK on success):
    soap_read__ns1__Download(struct soap*, struct _ns1__Download*);
    // Writer (returns SOAP_OK on success):
    soap_write__ns1__Download(struct soap*, struct _ns1__Download*);
    @endcode

  - <ns1:DownloadResponse> @ref _ns1__DownloadResponse
    @code
    // Reader (returns SOAP_OK on success):
    soap_read__ns1__DownloadResponse(struct soap*, struct _ns1__DownloadResponse*);
    // Writer (returns SOAP_OK on success):
    soap_write__ns1__DownloadResponse(struct soap*, struct _ns1__DownloadResponse*);
    @endcode

  - <ns1:Reboot> @ref _ns1__Reboot
    @code
    // Reader (returns SOAP_OK on success):
    soap_read__ns1__Reboot(struct soap*, struct _ns1__Reboot*);
    // Writer (returns SOAP_OK on success):
    soap_write__ns1__Reboot(struct soap*, struct _ns1__Reboot*);
    @endcode

  - <ns1:RebootResponse> @ref _ns1__RebootResponse
    @code
    // Reader (returns SOAP_OK on success):
    soap_read__ns1__RebootResponse(struct soap*, struct _ns1__RebootResponse*);
    // Writer (returns SOAP_OK on success):
    soap_write__ns1__RebootResponse(struct soap*, struct _ns1__RebootResponse*);
    @endcode

  - <ns1:GetQueuedTransfers> @ref _ns1__GetQueuedTransfers
    @code
    // Reader (returns SOAP_OK on success):
    soap_read__ns1__GetQueuedTransfers(struct soap*, struct _ns1__GetQueuedTransfers*);
    // Writer (returns SOAP_OK on success):
    soap_write__ns1__GetQueuedTransfers(struct soap*, struct _ns1__GetQueuedTransfers*);
    @endcode

  - <ns1:GetQueuedTransfersResponse> @ref _ns1__GetQueuedTransfersResponse
    @code
    // Reader (returns SOAP_OK on success):
    soap_read__ns1__GetQueuedTransfersResponse(struct soap*, struct _ns1__GetQueuedTransfersResponse*);
    // Writer (returns SOAP_OK on success):
    soap_write__ns1__GetQueuedTransfersResponse(struct soap*, struct _ns1__GetQueuedTransfersResponse*);
    @endcode

  - <ns1:ScheduleInform> @ref _ns1__ScheduleInform
    @code
    // Reader (returns SOAP_OK on success):
    soap_read__ns1__ScheduleInform(struct soap*, struct _ns1__ScheduleInform*);
    // Writer (returns SOAP_OK on success):
    soap_write__ns1__ScheduleInform(struct soap*, struct _ns1__ScheduleInform*);
    @endcode

  - <ns1:ScheduleInformResponse> @ref _ns1__ScheduleInformResponse
    @code
    // Reader (returns SOAP_OK on success):
    soap_read__ns1__ScheduleInformResponse(struct soap*, struct _ns1__ScheduleInformResponse*);
    // Writer (returns SOAP_OK on success):
    soap_write__ns1__ScheduleInformResponse(struct soap*, struct _ns1__ScheduleInformResponse*);
    @endcode

  - <ns1:SetVouchers> @ref _ns1__SetVouchers
    @code
    // Reader (returns SOAP_OK on success):
    soap_read__ns1__SetVouchers(struct soap*, struct _ns1__SetVouchers*);
    // Writer (returns SOAP_OK on success):
    soap_write__ns1__SetVouchers(struct soap*, struct _ns1__SetVouchers*);
    @endcode

  - <ns1:SetVouchersResponse> @ref _ns1__SetVouchersResponse
    @code
    // Reader (returns SOAP_OK on success):
    soap_read__ns1__SetVouchersResponse(struct soap*, struct _ns1__SetVouchersResponse*);
    // Writer (returns SOAP_OK on success):
    soap_write__ns1__SetVouchersResponse(struct soap*, struct _ns1__SetVouchersResponse*);
    @endcode

  - <ns1:GetOptions> @ref _ns1__GetOptions
    @code
    // Reader (returns SOAP_OK on success):
    soap_read__ns1__GetOptions(struct soap*, struct _ns1__GetOptions*);
    // Writer (returns SOAP_OK on success):
    soap_write__ns1__GetOptions(struct soap*, struct _ns1__GetOptions*);
    @endcode

  - <ns1:GetOptionsResponse> @ref _ns1__GetOptionsResponse
    @code
    // Reader (returns SOAP_OK on success):
    soap_read__ns1__GetOptionsResponse(struct soap*, struct _ns1__GetOptionsResponse*);
    // Writer (returns SOAP_OK on success):
    soap_write__ns1__GetOptionsResponse(struct soap*, struct _ns1__GetOptionsResponse*);
    @endcode

  - <ns1:Upload> @ref _ns1__Upload
    @code
    // Reader (returns SOAP_OK on success):
    soap_read__ns1__Upload(struct soap*, struct _ns1__Upload*);
    // Writer (returns SOAP_OK on success):
    soap_write__ns1__Upload(struct soap*, struct _ns1__Upload*);
    @endcode

  - <ns1:UploadResponse> @ref _ns1__UploadResponse
    @code
    // Reader (returns SOAP_OK on success):
    soap_read__ns1__UploadResponse(struct soap*, struct _ns1__UploadResponse*);
    // Writer (returns SOAP_OK on success):
    soap_write__ns1__UploadResponse(struct soap*, struct _ns1__UploadResponse*);
    @endcode

  - <ns1:FactoryReset> @ref _ns1__FactoryReset
    @code
    // Reader (returns SOAP_OK on success):
    soap_read__ns1__FactoryReset(struct soap*, struct _ns1__FactoryReset*);
    // Writer (returns SOAP_OK on success):
    soap_write__ns1__FactoryReset(struct soap*, struct _ns1__FactoryReset*);
    @endcode

  - <ns1:FactoryResetResponse> @ref _ns1__FactoryResetResponse
    @code
    // Reader (returns SOAP_OK on success):
    soap_read__ns1__FactoryResetResponse(struct soap*, struct _ns1__FactoryResetResponse*);
    // Writer (returns SOAP_OK on success):
    soap_write__ns1__FactoryResetResponse(struct soap*, struct _ns1__FactoryResetResponse*);
    @endcode

  - <ns1:GetAllQueuedTransfers> @ref _ns1__GetAllQueuedTransfers
    @code
    // Reader (returns SOAP_OK on success):
    soap_read__ns1__GetAllQueuedTransfers(struct soap*, struct _ns1__GetAllQueuedTransfers*);
    // Writer (returns SOAP_OK on success):
    soap_write__ns1__GetAllQueuedTransfers(struct soap*, struct _ns1__GetAllQueuedTransfers*);
    @endcode

  - <ns1:GetAllQueuedTransfersResponse> @ref _ns1__GetAllQueuedTransfersResponse
    @code
    // Reader (returns SOAP_OK on success):
    soap_read__ns1__GetAllQueuedTransfersResponse(struct soap*, struct _ns1__GetAllQueuedTransfersResponse*);
    // Writer (returns SOAP_OK on success):
    soap_write__ns1__GetAllQueuedTransfersResponse(struct soap*, struct _ns1__GetAllQueuedTransfersResponse*);
    @endcode

  - <ns1:ScheduleDownload> @ref _ns1__ScheduleDownload
    @code
    // Reader (returns SOAP_OK on success):
    soap_read__ns1__ScheduleDownload(struct soap*, struct _ns1__ScheduleDownload*);
    // Writer (returns SOAP_OK on success):
    soap_write__ns1__ScheduleDownload(struct soap*, struct _ns1__ScheduleDownload*);
    @endcode

  - <ns1:ScheduleDownloadResponse> @ref _ns1__ScheduleDownloadResponse
    @code
    // Reader (returns SOAP_OK on success):
    soap_read__ns1__ScheduleDownloadResponse(struct soap*, struct _ns1__ScheduleDownloadResponse*);
    // Writer (returns SOAP_OK on success):
    soap_write__ns1__ScheduleDownloadResponse(struct soap*, struct _ns1__ScheduleDownloadResponse*);
    @endcode

  - <ns1:CancelTransfer> @ref _ns1__CancelTransfer
    @code
    // Reader (returns SOAP_OK on success):
    soap_read__ns1__CancelTransfer(struct soap*, struct _ns1__CancelTransfer*);
    // Writer (returns SOAP_OK on success):
    soap_write__ns1__CancelTransfer(struct soap*, struct _ns1__CancelTransfer*);
    @endcode

  - <ns1:CancelTransferResponse> @ref _ns1__CancelTransferResponse
    @code
    // Reader (returns SOAP_OK on success):
    soap_read__ns1__CancelTransferResponse(struct soap*, struct _ns1__CancelTransferResponse*);
    // Writer (returns SOAP_OK on success):
    soap_write__ns1__CancelTransferResponse(struct soap*, struct _ns1__CancelTransferResponse*);
    @endcode

  - <ns1:ChangeDUState> @ref _ns1__ChangeDUState
    @code
    // Reader (returns SOAP_OK on success):
    soap_read__ns1__ChangeDUState(struct soap*, struct _ns1__ChangeDUState*);
    // Writer (returns SOAP_OK on success):
    soap_write__ns1__ChangeDUState(struct soap*, struct _ns1__ChangeDUState*);
    @endcode

  - <ns1:ChangeDUStateResponse> @ref _ns1__ChangeDUStateResponse
    @code
    // Reader (returns SOAP_OK on success):
    soap_read__ns1__ChangeDUStateResponse(struct soap*, struct _ns1__ChangeDUStateResponse*);
    // Writer (returns SOAP_OK on success):
    soap_write__ns1__ChangeDUStateResponse(struct soap*, struct _ns1__ChangeDUStateResponse*);
    @endcode

  - <ns1:Inform> @ref _ns1__Inform
    @code
    // Reader (returns SOAP_OK on success):
    soap_read__ns1__Inform(struct soap*, struct _ns1__Inform*);
    // Writer (returns SOAP_OK on success):
    soap_write__ns1__Inform(struct soap*, struct _ns1__Inform*);
    @endcode

  - <ns1:InformResponse> @ref _ns1__InformResponse
    @code
    // Reader (returns SOAP_OK on success):
    soap_read__ns1__InformResponse(struct soap*, struct _ns1__InformResponse*);
    // Writer (returns SOAP_OK on success):
    soap_write__ns1__InformResponse(struct soap*, struct _ns1__InformResponse*);
    @endcode

  - <ns1:TransferComplete> @ref _ns1__TransferComplete
    @code
    // Reader (returns SOAP_OK on success):
    soap_read__ns1__TransferComplete(struct soap*, struct _ns1__TransferComplete*);
    // Writer (returns SOAP_OK on success):
    soap_write__ns1__TransferComplete(struct soap*, struct _ns1__TransferComplete*);
    @endcode

  - <ns1:TransferCompleteResponse> @ref _ns1__TransferCompleteResponse
    @code
    // Reader (returns SOAP_OK on success):
    soap_read__ns1__TransferCompleteResponse(struct soap*, struct _ns1__TransferCompleteResponse*);
    // Writer (returns SOAP_OK on success):
    soap_write__ns1__TransferCompleteResponse(struct soap*, struct _ns1__TransferCompleteResponse*);
    @endcode

  - <ns1:AutonomousTransferComplete> @ref _ns1__AutonomousTransferComplete
    @code
    // Reader (returns SOAP_OK on success):
    soap_read__ns1__AutonomousTransferComplete(struct soap*, struct _ns1__AutonomousTransferComplete*);
    // Writer (returns SOAP_OK on success):
    soap_write__ns1__AutonomousTransferComplete(struct soap*, struct _ns1__AutonomousTransferComplete*);
    @endcode

  - <ns1:AutonomousTransferCompleteResponse> @ref _ns1__AutonomousTransferCompleteResponse
    @code
    // Reader (returns SOAP_OK on success):
    soap_read__ns1__AutonomousTransferCompleteResponse(struct soap*, struct _ns1__AutonomousTransferCompleteResponse*);
    // Writer (returns SOAP_OK on success):
    soap_write__ns1__AutonomousTransferCompleteResponse(struct soap*, struct _ns1__AutonomousTransferCompleteResponse*);
    @endcode

  - <ns1:Kicked> @ref _ns1__Kicked
    @code
    // Reader (returns SOAP_OK on success):
    soap_read__ns1__Kicked(struct soap*, struct _ns1__Kicked*);
    // Writer (returns SOAP_OK on success):
    soap_write__ns1__Kicked(struct soap*, struct _ns1__Kicked*);
    @endcode

  - <ns1:KickedResponse> @ref _ns1__KickedResponse
    @code
    // Reader (returns SOAP_OK on success):
    soap_read__ns1__KickedResponse(struct soap*, struct _ns1__KickedResponse*);
    // Writer (returns SOAP_OK on success):
    soap_write__ns1__KickedResponse(struct soap*, struct _ns1__KickedResponse*);
    @endcode

  - <ns1:RequestDownload> @ref _ns1__RequestDownload
    @code
    // Reader (returns SOAP_OK on success):
    soap_read__ns1__RequestDownload(struct soap*, struct _ns1__RequestDownload*);
    // Writer (returns SOAP_OK on success):
    soap_write__ns1__RequestDownload(struct soap*, struct _ns1__RequestDownload*);
    @endcode

  - <ns1:RequestDownloadResponse> @ref _ns1__RequestDownloadResponse
    @code
    // Reader (returns SOAP_OK on success):
    soap_read__ns1__RequestDownloadResponse(struct soap*, struct _ns1__RequestDownloadResponse*);
    // Writer (returns SOAP_OK on success):
    soap_write__ns1__RequestDownloadResponse(struct soap*, struct _ns1__RequestDownloadResponse*);
    @endcode

  - <ns1:DUStateChangeComplete> @ref _ns1__DUStateChangeComplete
    @code
    // Reader (returns SOAP_OK on success):
    soap_read__ns1__DUStateChangeComplete(struct soap*, struct _ns1__DUStateChangeComplete*);
    // Writer (returns SOAP_OK on success):
    soap_write__ns1__DUStateChangeComplete(struct soap*, struct _ns1__DUStateChangeComplete*);
    @endcode

  - <ns1:DUStateChangeCompleteResponse> @ref _ns1__DUStateChangeCompleteResponse
    @code
    // Reader (returns SOAP_OK on success):
    soap_read__ns1__DUStateChangeCompleteResponse(struct soap*, struct _ns1__DUStateChangeCompleteResponse*);
    // Writer (returns SOAP_OK on success):
    soap_write__ns1__DUStateChangeCompleteResponse(struct soap*, struct _ns1__DUStateChangeCompleteResponse*);
    @endcode

  - <ns1:AutonomousDUStateChangeComplete> @ref _ns1__AutonomousDUStateChangeComplete
    @code
    // Reader (returns SOAP_OK on success):
    soap_read__ns1__AutonomousDUStateChangeComplete(struct soap*, struct _ns1__AutonomousDUStateChangeComplete*);
    // Writer (returns SOAP_OK on success):
    soap_write__ns1__AutonomousDUStateChangeComplete(struct soap*, struct _ns1__AutonomousDUStateChangeComplete*);
    @endcode

  - <ns1:AutonomousDUStateChangeCompleteResponse> @ref _ns1__AutonomousDUStateChangeCompleteResponse
    @code
    // Reader (returns SOAP_OK on success):
    soap_read__ns1__AutonomousDUStateChangeCompleteResponse(struct soap*, struct _ns1__AutonomousDUStateChangeCompleteResponse*);
    // Writer (returns SOAP_OK on success):
    soap_write__ns1__AutonomousDUStateChangeCompleteResponse(struct soap*, struct _ns1__AutonomousDUStateChangeCompleteResponse*);
    @endcode

*/

/* End of cwmp-1-4.h */
